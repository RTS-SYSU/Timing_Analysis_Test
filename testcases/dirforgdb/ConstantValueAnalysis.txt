##########################
## Analysis Information ##
##########################
#### Function: InitSeed
### Basic Block: 0
## Instruction: renamable $r1 = LDRi12 %const.0, 0, 14, $noreg, debug-location !747 :: (load (s32) from constant-pool); test/matmult.c:73:8
## address: 801388
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 80138c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, killed renamable $r1, 0, 14, $noreg, debug-location !747 :: (store (s32) into @Seed); test/matmult.c:73:8
## address: 801390
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !748; test/matmult.c:74:1
## address: 801394
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 801398
# Before:
not available
# After:
not available
#### Function: Initialize
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 8013dc
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 8013e0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
## address: 8013e4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
## address: 8013e8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 8013ec
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 8013f0
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !755; test/matmult.c:115:9
## address: 8013f4
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !756 :: (load (s32) from %stack.0); test/matmult.c:0
## address: 8013f8
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
## address: 8013fc
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 20, 14, $noreg, implicit-def $cpsr, debug-location !758; test/matmult.c:115:4
## address: 801400
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !758; test/matmult.c:115:4
## address: 801404
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !758; test/matmult.c:115:4
## address: 801408
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 80140c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
## address: 801410
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !759; test/matmult.c:116:12
## address: 801414
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !756 :: (load (s32) from %stack.3); test/matmult.c:0
## address: 801418
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
## address: 80141c
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 20, 14, $noreg, implicit-def $cpsr, debug-location !761; test/matmult.c:116:7
## address: 801420
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 0, killed $cpsr, debug-location !761; test/matmult.c:116:7
## address: 801424
# Before:
not available
# After:
not available
## Instruction: B %bb.4, debug-location !761; test/matmult.c:116:7
## address: 801428
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: BL_pred @RandomInteger, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $r0, debug-location !762; test/matmult.c:117:42
## address: 80142c
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 12, 14, $noreg, debug-location !762 :: (load (s32) from %stack.2); test/matmult.c:117:42
## address: 801430
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -8, 14, $noreg, debug-location !762 :: (load (s32) from %stack.1); test/matmult.c:117:42
## address: 801434
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !762 :: (load (s32) from %stack.4); test/matmult.c:117:42
## address: 801438
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = ADDrsi renamable $r3, renamable $r3, 18, 14, $noreg, $noreg, debug-location !763; test/matmult.c:117:10
## address: 80143c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r1, killed renamable $r3, 34, 14, $noreg, $noreg, debug-location !763; test/matmult.c:117:10
## address: 801440
# Before:
not available
# After:
not available
## Instruction: STRrs killed renamable $r0, killed renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !764 :: (store (s32) into %ir.arrayidx4); test/matmult.c:117:40
## address: 801444
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !763; test/matmult.c:117:10
## address: 801448
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !765 :: (load (s32) from %stack.4); test/matmult.c:116:63
## address: 80144c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !765; test/matmult.c:116:63
## address: 801450
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
## address: 801454
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !761; test/matmult.c:116:7
## address: 801458
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7, debug-location !767; test/matmult.c:117:56
## address: 80145c
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !768 :: (load (s32) from %stack.2); test/matmult.c:115:60
## address: 801460
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !768; test/matmult.c:115:60
## address: 801464
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 801468
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !758; test/matmult.c:115:4
## address: 80146c
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !770; test/matmult.c:118:1
## address: 801470
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !770; test/matmult.c:118:1
## address: 801474
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !770; test/matmult.c:118:1
## address: 801478
# Before:
not available
# After:
not available
#### Function: Multiply
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 80147c
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 801480
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 36, 14, $noreg, $noreg
## address: 801484
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -16, 14, $noreg :: (store (s32) into %stack.3)
## address: 801488
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -12, 14, $noreg :: (store (s32) into %stack.2)
## address: 80148c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
## address: 801490
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 801494
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 801498
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !772; test/matmult.c:154:9
## address: 80149c
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !773 :: (load (s32) from %stack.0); test/matmult.c:0
## address: 8014a0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 16, 14, $noreg :: (store (s32) into %stack.4)
## address: 8014a4
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 20, 14, $noreg, implicit-def $cpsr, debug-location !775; test/matmult.c:154:4
## address: 8014a8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 0, killed $cpsr, debug-location !775; test/matmult.c:154:4
## address: 8014ac
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !775; test/matmult.c:154:4
## address: 8014b0
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 8014b4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.5)
## address: 8014b8
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !776; test/matmult.c:155:12
## address: 8014bc
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !773 :: (load (s32) from %stack.5); test/matmult.c:0
## address: 8014c0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.6)
## address: 8014c4
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 20, 14, $noreg, implicit-def $cpsr, debug-location !778; test/matmult.c:155:7
## address: 8014c8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 0, killed $cpsr, debug-location !778; test/matmult.c:155:7
## address: 8014cc
# Before:
not available
# After:
not available
## Instruction: B %bb.4, debug-location !778; test/matmult.c:155:7
## address: 8014d0
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !779 :: (load (s32) from %stack.6); test/matmult.c:157:10
## address: 8014d4
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !779 :: (load (s32) from %stack.3); test/matmult.c:157:10
## address: 8014d8
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !779 :: (load (s32) from %stack.4); test/matmult.c:157:10
## address: 8014dc
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r1, renamable $r1, 18, 14, $noreg, $noreg, debug-location !779; test/matmult.c:157:10
## address: 8014e0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, killed renamable $r1, 34, 14, $noreg, $noreg, debug-location !779; test/matmult.c:157:10
## address: 8014e4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 8014e8
# Before:
not available
# After:
not available
## Instruction: STRrs renamable $r0, killed renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !780 :: (store (s32) into %ir.arrayidx4); test/matmult.c:157:29
## address: 8014ec
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.7)
## address: 8014f0
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !781; test/matmult.c:158:15
## address: 8014f4
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !773 :: (load (s32) from %stack.7); test/matmult.c:0
## address: 8014f8
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.8)
## address: 8014fc
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 20, 14, $noreg, implicit-def $cpsr, debug-location !783; test/matmult.c:158:10
## address: 801500
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !783; test/matmult.c:158:10
## address: 801504
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !783; test/matmult.c:158:10
## address: 801508
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !784 :: (load (s32) from %stack.6); test/matmult.c:160:16
## address: 80150c
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -16, 14, $noreg, debug-location !784 :: (load (s32) from %stack.3); test/matmult.c:160:16
## address: 801510
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $r11, -12, 14, $noreg, debug-location !784 :: (load (s32) from %stack.2); test/matmult.c:160:16
## address: 801514
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $sp, 0, 14, $noreg, debug-location !784 :: (load (s32) from %stack.8); test/matmult.c:160:16
## address: 801518
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -8, 14, $noreg, debug-location !784 :: (load (s32) from %stack.1); test/matmult.c:160:16
## address: 80151c
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 16, 14, $noreg, debug-location !784 :: (load (s32) from %stack.4); test/matmult.c:160:16
## address: 801520
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r1, renamable $r1, 18, 14, $noreg, $noreg, debug-location !784; test/matmult.c:160:16
## address: 801524
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADDrsi renamable $r3, renamable $r1, 34, 14, $noreg, $noreg, debug-location !784; test/matmult.c:160:16
## address: 801528
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRrs killed renamable $r3, renamable $lr, 16386, 14, $noreg, debug-location !784 :: (load (s32) from %ir.arrayidx9); test/matmult.c:160:16
## address: 80152c
# Before:
bot
# After:
not available
## Instruction: renamable $lr = ADDrsi renamable $lr, renamable $lr, 18, 14, $noreg, $noreg, debug-location !785; test/matmult.c:160:34
## address: 801530
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDrsi renamable $r12, killed renamable $lr, 34, 14, $noreg, $noreg, debug-location !785; test/matmult.c:160:34
## address: 801534
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRrs killed renamable $r12, renamable $r2, 16386, 14, $noreg, debug-location !785 :: (load (s32) from %ir.arrayidx11); test/matmult.c:160:34
## address: 801538
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi renamable $r0, killed renamable $r1, 34, 14, $noreg, $noreg, debug-location !787; test/matmult.c:159:13
## address: 80153c
# Before:
not available
# After:
not available
## Instruction: renamable $lr = LDRrs renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !788 :: (load (s32) from %ir.arrayidx13); test/matmult.c:159:32
## address: 801540
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = nsw MLAv5 killed renamable $r3, killed renamable $r12, killed renamable $lr, 14, $noreg, $noreg, debug-location !788; test/matmult.c:159:32
## address: 801544
# Before:
not available
# After:
not available
## Instruction: STRrs killed renamable $r0, killed renamable $r1, renamable $r2, 16386, 14, $noreg, debug-location !788 :: (store (s32) into %ir.arrayidx13); test/matmult.c:159:32
## address: 801548
# Before:
bot
# After:
not available
## Instruction: B %bb.7, debug-location !787; test/matmult.c:159:13
## address: 80154c
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !789 :: (load (s32) from %stack.8); test/matmult.c:158:51
## address: 801550
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !789; test/matmult.c:158:51
## address: 801554
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.7)
## address: 801558
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !783; test/matmult.c:158:10
## address: 80155c
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.9, debug-location !792; test/matmult.c:161:8
## address: 801560
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !793 :: (load (s32) from %stack.6); test/matmult.c:155:48
## address: 801564
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !793; test/matmult.c:155:48
## address: 801568
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.5)
## address: 80156c
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !778; test/matmult.c:155:7
## address: 801570
# Before:
not available
# After:
not available
### Basic Block: a
## Instruction: B %bb.11, debug-location !792; test/matmult.c:161:8
## address: 801574
# Before:
not available
# After:
not available
### Basic Block: b
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !795 :: (load (s32) from %stack.4); test/matmult.c:154:45
## address: 801578
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDri renamable $r0, 1, 14, $noreg, $noreg, debug-location !795; test/matmult.c:154:45
## address: 80157c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 801580
# Before:
bot
# After:
not available
## Instruction: B %bb.1, debug-location !775; test/matmult.c:154:4
## address: 801584
# Before:
not available
# After:
not available
### Basic Block: c
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !797; test/matmult.c:162:1
## address: 801588
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !797; test/matmult.c:162:1
## address: 80158c
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !797; test/matmult.c:162:1
## address: 801590
# Before:
not available
# After:
not available
#### Function: RandomInteger
### Basic Block: 0
## Instruction: renamable $r1 = LDRi12 %const.0, 0, 14, $noreg, debug-location !799 :: (load (s32) from constant-pool); test/matmult.c:126:13
## address: 801594
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 renamable $r1, 0, 14, $noreg, debug-location !799 :: (dereferenceable load (s32) from @Seed); test/matmult.c:126:13
## address: 801598
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = MOVi 133, 14, $noreg, $noreg
## address: 80159c
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r0 = nsw MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !800; test/matmult.c:126:18
## address: 8015a0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw ADDri killed renamable $r0, 81, 14, $noreg, $noreg, debug-location !801; test/matmult.c:126:25
## address: 8015a4
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8015a8
# Before:
bot
# After:
not available
## Instruction: dead early-clobber renamable $r2, early-clobber renamable $r3 = SMULLv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !802; test/matmult.c:126:31
## address: 8015ac
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r3, 73, 14, $noreg, $noreg, debug-location !802; test/matmult.c:126:31
## address: 8015b0
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = ADDrsi killed renamable $r2, killed renamable $r3, 251, 14, $noreg, $noreg, debug-location !802; test/matmult.c:126:31
## address: 8015b4
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVi 159, 14, $noreg, $noreg
## address: 8015b8
# Before:
not available
# After:
not available
## Instruction: $r12 = ORRri $r12, 7936, 14, $noreg, $noreg
## address: 8015bc
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r2 = MULv5 killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !802; test/matmult.c:126:31
## address: 8015c0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !802; test/matmult.c:126:31
## address: 8015c4
# Before:
not available
# After:
not available
## Instruction: STRi12 renamable $r0, killed renamable $r1, 0, 14, $noreg, debug-location !803 :: (store (s32) into @Seed); test/matmult.c:126:9
## address: 8015c8
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !804; test/matmult.c:127:4
## address: 8015cc
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 8015d0
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 8015d4
# Before:
not available
# After:
not available
#### Function: Test
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 80139c
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 8013a0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 8013a4
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 8013a8
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
## address: 8013ac
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 8013b0
# Before:
bot
# After:
not available
## Instruction: BL_pred @Initialize, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, debug-location !750; test/matmult.c:88:4
## address: 8013b4
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !750 :: (load (s32) from %stack.1); test/matmult.c:88:4
## address: 8013b8
# Before:
bot
# After:
not available
## Instruction: BL_pred @Initialize, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit-def $sp, debug-location !751; test/matmult.c:89:4
## address: 8013bc
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !751 :: (load (s32) from %stack.2); test/matmult.c:89:4
## address: 8013c0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !751 :: (load (s32) from %stack.1); test/matmult.c:89:4
## address: 8013c4
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !751 :: (load (s32) from %stack.0); test/matmult.c:89:4
## address: 8013c8
# Before:
bot
# After:
not available
## Instruction: BL_pred @Multiply, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !752; test/matmult.c:96:4
## address: 8013cc
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !753; test/matmult.c:105:1
## address: 8013d0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !753; test/matmult.c:105:1
## address: 8013d4
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, debug-location !753; test/matmult.c:105:1
## address: 8013d8
# Before:
not available
# After:
not available
#### Function: __absvdi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 8026cc
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 8026d0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 8026d4
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
## address: 8026d8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 8026dc
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
## address: 8026e0
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 8026e4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !1308; ../absvdi2.c:25:11
## address: 8026e8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1308; ../absvdi2.c:25:11
## address: 8026ec
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1309; ../absvdi2.c:25:9
## address: 8026f0
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1309; ../absvdi2.c:25:9
## address: 8026f4
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1309; ../absvdi2.c:25:9
## address: 8026f8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1310 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
## address: 8026fc
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1310 :: (load (s32) from constant-pool); ../absvdi2.c:26:9
## address: 802700
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
## address: 802704
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1310; ../absvdi2.c:26:9
## address: 802708
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1311 :: (load (s32) from %stack.1); ../absvdi2.c:28:20
## address: 80270c
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1311 :: (load (s32) from %stack.0); ../absvdi2.c:28:20
## address: 802710
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !1311; ../absvdi2.c:28:20
## address: 802714
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !1311; ../absvdi2.c:28:20
## address: 802718
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1311; ../absvdi2.c:28:20
## address: 80271c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, debug-location !1311; ../absvdi2.c:28:20
## address: 802720
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1312; ../absvdi2.c:28:5
## address: 802724
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1312; ../absvdi2.c:28:5
## address: 802728
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1312; ../absvdi2.c:28:5
## address: 80272c
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 802730
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 802734
# Before:
not available
# After:
not available
#### Function: __absvsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802738
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 80273c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 802740
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 802744
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !1317; ../absvsi2.c:25:9
## address: 802748
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1317; ../absvsi2.c:25:9
## address: 80274c
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1317; ../absvsi2.c:25:9
## address: 802750
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1318 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
## address: 802754
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1318 :: (load (s32) from constant-pool); ../absvsi2.c:26:9
## address: 802758
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 26, 14, $noreg, $noreg
## address: 80275c
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1318; ../absvsi2.c:26:9
## address: 802760
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1319 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
## address: 802764
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1319; ../absvsi2.c:28:20
## address: 802768
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 80276c
# Before:
bot
# After:
not available
## Instruction: Bcc %bb.4, 5, killed $cpsr, debug-location !1319; ../absvsi2.c:28:20
## address: 802770
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1319 :: (load (s32) from %stack.0); ../absvsi2.c:28:20
## address: 802774
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !1319; ../absvsi2.c:28:20
## address: 802778
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 80277c
# Before:
bot
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1319 :: (load (s32) from %stack.1); ../absvsi2.c:28:20
## address: 802780
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1320; ../absvsi2.c:28:5
## address: 802784
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1320; ../absvsi2.c:28:5
## address: 802788
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1320; ../absvsi2.c:28:5
## address: 80278c
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 802790
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 802794
# Before:
not available
# After:
not available
#### Function: __addvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802798
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 80279c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 8027a0
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr $r1, 14, $noreg, $noreg
## address: 8027a4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
## address: 8027a8
# Before:
bot
# After:
not available
## Instruction: $r12 = MOVr $r0, 14, $noreg, $noreg
## address: 8027ac
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 8027b0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r2, 14, $noreg, def $cpsr, debug-location !1322; ../addvdi3.c:24:27
## address: 8027b4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
## address: 8027b8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r1, renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1322; ../addvdi3.c:24:27
## address: 8027bc
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 8027c0
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r3, 0, 14, $noreg, implicit-def $cpsr, debug-location !1324; ../addvdi3.c:25:9
## address: 8027c4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1324; ../addvdi3.c:25:9
## address: 8027c8
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1324; ../addvdi3.c:25:9
## address: 8027cc
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1325 :: (load (s32) from %stack.0); ../addvdi3.c:27:15
## address: 8027d0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1325 :: (load (s32) from %stack.3); ../addvdi3.c:27:15
## address: 8027d4
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !1325 :: (load (s32) from %stack.1); ../addvdi3.c:27:15
## address: 8027d8
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !1325 :: (load (s32) from %stack.2); ../addvdi3.c:27:15
## address: 8027dc
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1325; ../addvdi3.c:27:15
## address: 8027e0
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1325; ../addvdi3.c:27:15
## address: 8027e4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !1326; ../addvdi3.c:27:13
## address: 8027e8
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1326; ../addvdi3.c:27:13
## address: 8027ec
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1327 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
## address: 8027f0
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1327 :: (load (s32) from constant-pool); ../addvdi3.c:28:13
## address: 8027f4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
## address: 8027f8
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1327; ../addvdi3.c:28:13
## address: 8027fc
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1328; ../addvdi3.c:29:5
## address: 802800
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !1329 :: (load (s32) from %stack.0); ../addvdi3.c:32:15
## address: 802804
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1329 :: (load (s32) from %stack.3); ../addvdi3.c:32:15
## address: 802808
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 8, 14, $noreg, debug-location !1329 :: (load (s32) from %stack.1); ../addvdi3.c:32:15
## address: 80280c
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 4, 14, $noreg, debug-location !1329 :: (load (s32) from %stack.2); ../addvdi3.c:32:15
## address: 802810
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !1329; ../addvdi3.c:32:15
## address: 802814
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr renamable $r0, renamable $r1, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !1329; ../addvdi3.c:32:15
## address: 802818
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !1330; ../addvdi3.c:32:13
## address: 80281c
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1330; ../addvdi3.c:32:13
## address: 802820
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1331 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
## address: 802824
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1331 :: (load (s32) from constant-pool); ../addvdi3.c:33:13
## address: 802828
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
## address: 80282c
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1331; ../addvdi3.c:33:13
## address: 802830
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
## address: 802834
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !1332 :: (load (s32) from %stack.0); ../addvdi3.c:35:5
## address: 802838
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1332 :: (load (s32) from %stack.1); ../addvdi3.c:35:5
## address: 80283c
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1332; ../addvdi3.c:35:5
## address: 802840
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1332; ../addvdi3.c:35:5
## address: 802844
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1332; ../addvdi3.c:35:5
## address: 802848
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 80284c
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 802850
# Before:
not available
# After:
not available
#### Function: __addvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802854
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 802858
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 80285c
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 802860
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ADDrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1334; ../addvsi3.c:24:27
## address: 802864
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 802868
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r1, 0, 14, $noreg, implicit-def $cpsr, debug-location !1336; ../addvsi3.c:25:9
## address: 80286c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 4, killed $cpsr, debug-location !1336; ../addvsi3.c:25:9
## address: 802870
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1336; ../addvsi3.c:25:9
## address: 802874
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1338 :: (load (s32) from %stack.0); ../addvsi3.c:27:13
## address: 802878
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1338 :: (load (s32) from %stack.1); ../addvsi3.c:27:13
## address: 80287c
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1338; ../addvsi3.c:27:13
## address: 802880
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 10, killed $cpsr, debug-location !1338; ../addvsi3.c:27:13
## address: 802884
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1338; ../addvsi3.c:27:13
## address: 802888
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1339 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
## address: 80288c
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1339 :: (load (s32) from constant-pool); ../addvsi3.c:28:13
## address: 802890
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 28, 14, $noreg, $noreg
## address: 802894
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1339; ../addvsi3.c:28:13
## address: 802898
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.7, debug-location !1340; ../addvsi3.c:29:5
## address: 80289c
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1342 :: (load (s32) from %stack.0); ../addvsi3.c:32:13
## address: 8028a0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1342 :: (load (s32) from %stack.1); ../addvsi3.c:32:13
## address: 8028a4
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1342; ../addvsi3.c:32:13
## address: 8028a8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 11, killed $cpsr, debug-location !1342; ../addvsi3.c:32:13
## address: 8028ac
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1342; ../addvsi3.c:32:13
## address: 8028b0
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !1343 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
## address: 8028b4
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !1343 :: (load (s32) from constant-pool); ../addvsi3.c:33:13
## address: 8028b8
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 33, 14, $noreg, $noreg
## address: 8028bc
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !1343; ../addvsi3.c:33:13
## address: 8028c0
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: B %bb.7
## address: 8028c4
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1344 :: (load (s32) from %stack.0); ../addvsi3.c:35:5
## address: 8028c8
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1344; ../addvsi3.c:35:5
## address: 8028cc
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1344; ../addvsi3.c:35:5
## address: 8028d0
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1344; ../addvsi3.c:35:5
## address: 8028d4
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 8028d8
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 8028dc
# Before:
not available
# After:
not available
#### Function: __aeabi_lcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802c4c
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 802c50
# Before:
not available
# After:
not available
## Instruction: BL_pred @__cmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !1496; ../cmpdi2.c:48:9
## address: 802c54
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !1497; ../cmpdi2.c:48:24
## address: 802c58
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1498; ../cmpdi2.c:48:2
## address: 802c5c
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1498; ../cmpdi2.c:48:2
## address: 802c60
# Before:
not available
# After:
not available
#### Function: __aeabi_ulcmp
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 80413c
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 804140
# Before:
not available
# After:
not available
## Instruction: BL_pred @__ucmpdi2, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, debug-location !2219; ../ucmpdi2.c:48:9
## address: 804144
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBri killed renamable $r0, 1, 14, $noreg, $noreg, debug-location !2220; ../ucmpdi2.c:48:25
## address: 804148
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !2221; ../ucmpdi2.c:48:2
## address: 80414c
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !2221; ../ucmpdi2.c:48:2
## address: 804150
# Before:
not available
# After:
not available
#### Function: __ashldi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
## address: 8028e0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
## address: 8028e4
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
## address: 8028e8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
## address: 8028ec
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
## address: 8028f0
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
## address: 8028f4
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !1347 :: (store (s32) into %ir.all + 4, basealign 8); ../ashldi3.c:29:15
## address: 8028f8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !1347 :: (store (s32) into %ir.all, align 8); ../ashldi3.c:29:15
## address: 8028fc
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !1349; ../ashldi3.c:30:9
## address: 802900
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !1349; ../ashldi3.c:30:9
## address: 802904
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1349; ../ashldi3.c:30:9
## address: 802908
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
## address: 80290c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 802910
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1351 :: (store (s32) into %ir.low, align 8); ../ashldi3.c:32:22
## address: 802914
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !1352 :: (dereferenceable load (s32) from %ir.low2, align 8); ../ashldi3.c:33:33
## address: 802918
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1353; ../ashldi3.c:33:43
## address: 80291c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !1354; ../ashldi3.c:33:37
## address: 802920
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1357 :: (store (s32) into %ir.high); ../ashldi3.c:33:23
## address: 802924
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1358; ../ashldi3.c:34:5
## address: 802928
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1360 :: (load (s32) from %stack.4); ../ashldi3.c:37:13
## address: 80292c
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1360; ../ashldi3.c:37:13
## address: 802930
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1360; ../ashldi3.c:37:13
## address: 802934
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1360; ../ashldi3.c:37:13
## address: 802938
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
## address: 80293c
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
## address: 802940
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 802944
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 802948
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1361; ../ashldi3.c:38:13
## address: 80294c
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !1362 :: (load (s32) from %stack.4); ../ashldi3.c:39:33
## address: 802950
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 32, 14, $noreg, debug-location !1362 :: (dereferenceable load (s32) from %ir.low6, align 8); ../ashldi3.c:39:33
## address: 802954
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !1363; ../ashldi3.c:39:37
## address: 802958
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1365 :: (store (s32) into %ir.low9, align 8); ../ashldi3.c:39:23
## address: 80295c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1369 :: (dereferenceable load (s32) from %ir.low14, align 8); ../ashldi3.c:40:56
## address: 802960
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1367 :: (dereferenceable load (s32) from %ir.high11); ../ashldi3.c:40:34
## address: 802964
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 2, 14, $noreg, $noreg, debug-location !1368; ../ashldi3.c:40:39
## address: 802968
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1370; ../ashldi3.c:40:77
## address: 80296c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, killed renamable $r2, 3, 14, $noreg, $noreg, debug-location !1372; ../ashldi3.c:40:45
## address: 802970
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1375 :: (store (s32) into %ir.high17); ../ashldi3.c:40:23
## address: 802974
# Before:
bot
# After:
not available
## Instruction: B %bb.5
## address: 802978
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1376 :: (dereferenceable load (s32) from %ir.all19, align 8); ../ashldi3.c:42:19
## address: 80297c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1376 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../ashldi3.c:42:19
## address: 802980
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 802984
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 802988
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1377; ../ashldi3.c:42:5
## address: 80298c
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1378 :: (load (s32) from %stack.6); ../ashldi3.c:0
## address: 802990
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1378 :: (load (s32) from %stack.5); ../ashldi3.c:0
## address: 802994
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !1379; ../ashldi3.c:43:1
## address: 802998
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1379; ../ashldi3.c:43:1
## address: 80299c
# Before:
not available
# After:
not available
#### Function: __ashrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
## address: 8029a0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
## address: 8029a4
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
## address: 8029a8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
## address: 8029ac
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
## address: 8029b0
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
## address: 8029b4
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !1382 :: (store (s32) into %ir.all + 4, basealign 8); ../ashrdi3.c:29:15
## address: 8029b8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !1382 :: (store (s32) into %ir.all, align 8); ../ashrdi3.c:29:15
## address: 8029bc
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !1384; ../ashrdi3.c:30:9
## address: 8029c0
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !1384; ../ashrdi3.c:30:9
## address: 8029c4
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1384; ../ashrdi3.c:30:9
## address: 8029c8
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1386 :: (load (s32) from %stack.4); ../ashrdi3.c:33:33
## address: 8029cc
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1386 :: (dereferenceable load (s32) from %ir.high); ../ashrdi3.c:33:33
## address: 8029d0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 249, 14, $noreg, $noreg, debug-location !1387; ../ashrdi3.c:33:38
## address: 8029d4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1390 :: (store (s32) into %ir.high2); ../ashrdi3.c:33:23
## address: 8029d8
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1392 :: (dereferenceable load (s32) from %ir.high4); ../ashrdi3.c:34:32
## address: 8029dc
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1393; ../ashrdi3.c:34:43
## address: 8029e0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 1, 14, $noreg, $noreg, debug-location !1394; ../ashrdi3.c:34:37
## address: 8029e4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1396 :: (store (s32) into %ir.low, align 8); ../ashrdi3.c:34:22
## address: 8029e8
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1397; ../ashrdi3.c:35:5
## address: 8029ec
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1399 :: (load (s32) from %stack.4); ../ashrdi3.c:38:13
## address: 8029f0
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1399; ../ashrdi3.c:38:13
## address: 8029f4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1399; ../ashrdi3.c:38:13
## address: 8029f8
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1399; ../ashrdi3.c:38:13
## address: 8029fc
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
## address: 802a00
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
## address: 802a04
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 802a08
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 802a0c
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1400; ../ashrdi3.c:39:13
## address: 802a10
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !1402 :: (load (s32) from %stack.4); ../ashrdi3.c:40:34
## address: 802a14
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1402 :: (dereferenceable load (s32) from %ir.high9); ../ashrdi3.c:40:34
## address: 802a18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 1, 14, $noreg, $noreg, debug-location !1403; ../ashrdi3.c:40:39
## address: 802a1c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1406 :: (store (s32) into %ir.high12); ../ashrdi3.c:40:24
## address: 802a20
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1411 :: (dereferenceable load (s32) from %ir.low17, align 8); ../ashrdi3.c:41:72
## address: 802a24
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1408 :: (dereferenceable load (s32) from %ir.high14); ../ashrdi3.c:41:33
## address: 802a28
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1409; ../ashrdi3.c:41:55
## address: 802a2c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1410; ../ashrdi3.c:41:38
## address: 802a30
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1413; ../ashrdi3.c:41:61
## address: 802a34
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1415 :: (store (s32) into %ir.low20, align 8); ../ashrdi3.c:41:22
## address: 802a38
# Before:
bot
# After:
not available
## Instruction: B %bb.5
## address: 802a3c
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !1416 :: (dereferenceable load (s32) from %ir.all22, align 8); ../ashrdi3.c:43:19
## address: 802a40
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !1416 :: (dereferenceable load (s32) from %ir.all22 + 4, basealign 8); ../ashrdi3.c:43:19
## address: 802a44
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 802a48
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 802a4c
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1417; ../ashrdi3.c:43:5
## address: 802a50
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1418 :: (load (s32) from %stack.6); ../ashrdi3.c:0
## address: 802a54
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1418 :: (load (s32) from %stack.5); ../ashrdi3.c:0
## address: 802a58
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !1419; ../ashrdi3.c:44:1
## address: 802a5c
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1419; ../ashrdi3.c:44:1
## address: 802a60
# Before:
not available
# After:
not available
#### Function: __clzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 802a64
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !1422 :: (store (s32) into %ir.all + 4, basealign 8); ../clzdi2.c:25:11
## address: 802a68
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !1422 :: (store (s32) into %ir.all, align 8); ../clzdi2.c:25:11
## address: 802a6c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 0, 14, $noreg, debug-location !1428 :: (dereferenceable load (s32) from %ir.low, align 8); ../clzdi2.c:27:49
## address: 802a70
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1424 :: (dereferenceable load (s32) from %ir.high2); ../clzdi2.c:26:28
## address: 802a74
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1429; ../clzdi2.c:27:42
## address: 802a78
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr $r2, 14, $noreg, $noreg, debug-location !1429; ../clzdi2.c:27:42
## address: 802a7c
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1429; ../clzdi2.c:27:42
## address: 802a80
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a84
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a88
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a8c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 67, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a90
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, renamable $r0, 131, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a94
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MVNr killed renamable $r0, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802a98
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802a9c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802aa0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802aa4
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802aa8
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802aac
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802ab0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802ab4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802ab8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802abc
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802ac0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802ac4
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802ac8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !1430; ../clzdi2.c:27:12
## address: 802acc
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
## address: 802ad0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !1433; ../clzdi2.c:27:59
## address: 802ad4
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1433; ../clzdi2.c:27:59
## address: 802ad8
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1433; ../clzdi2.c:27:59
## address: 802adc
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1434; ../clzdi2.c:27:5
## address: 802ae0
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1434; ../clzdi2.c:27:5
## address: 802ae4
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 802ae8
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 802aec
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
## address: 802af0
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
## address: 802af4
# Before:
not available
# After:
not available
#### Function: __clzsi2
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802af8
# Before:
[
 Call of function prime |->
  [
   Function call at location prime_BB0_I7 |->
    [
     Call of function prime_main |->
      [
       Function call at location prime_main_BB0_I13 |->
        [
         Call of function prime_prime |->
          [
           Function call at location prime_prime_BB0_I8 |->
            [
             Call of function prime_even |->
              [
               Function call at location prime_even_BB0_I8 |->
                [
                 Call of function prime_divides |->
                  [
                   Function call at location prime_divides_BB0_I10 |->
                    [
                     Call of function __umodsi3 |->
                      [
                       Function call at location __umodsi3_BB0_I9 |->
                        [
                         Call of function __udivsi3 |->
                          [
                           Function call at location __udivsi3_BB4_I1 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> 0x2,
 1 |-> 0x2,
 2 |-> top,
 3 |-> 0xd2b88, @prime_x,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa0,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                            ]

                           Function call at location __udivsi3_BB4_I5 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa0,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]

           Function call at location prime_prime_BB4_I2 |->
            [
             Call of function prime_divides |->
              [
               Function call at location prime_divides_BB0_I10 |->
                [
                 Call of function __umodsi3 |->
                  [
                   Function call at location __umodsi3_BB0_I9 |->
                    [
                     Call of function __udivsi3 |->
                      [
                       Function call at location __udivsi3_BB4_I1 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa8,
 12 |-> top,
 13 |-> 0x7ffff68,
 14 |-> top,
 15 |-> top]
{0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                        ]

                       Function call at location __udivsi3_BB4_I5 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa8,
 12 |-> top,
 13 |-> 0x7ffff68,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]

       Function call at location prime_main_BB1_I2 |->
        [
         Call of function prime_prime |->
          [
           Function call at location prime_prime_BB0_I8 |->
            [
             Call of function prime_even |->
              [
               Function call at location prime_even_BB0_I8 |->
                [
                 Call of function prime_divides |->
                  [
                   Function call at location prime_divides_BB0_I10 |->
                    [
                     Call of function __umodsi3 |->
                      [
                       Function call at location __umodsi3_BB0_I9 |->
                        [
                         Call of function __udivsi3 |->
                          [
                           Function call at location __udivsi3_BB4_I1 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> 0x2,
 1 |-> 0x2,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa0,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                            ]

                           Function call at location __udivsi3_BB4_I5 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa0,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]

           Function call at location prime_prime_BB4_I2 |->
            [
             Call of function prime_divides |->
              [
               Function call at location prime_divides_BB0_I10 |->
                [
                 Call of function __umodsi3 |->
                  [
                   Function call at location __umodsi3_BB0_I9 |->
                    [
                     Call of function __udivsi3 |->
                      [
                       Function call at location __udivsi3_BB4_I1 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa8,
 12 |-> top,
 13 |-> 0x7ffff68,
 14 |-> top,
 15 |-> top]
{0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                        ]

                       Function call at location __udivsi3_BB4_I5 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffffa8,
 12 |-> top,
 13 |-> 0x7ffff68,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 802afc
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r0, 14, $noreg, $noreg
## address: 802b00
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 0, 14, $noreg, $noreg
## address: 802b04
# Before:
not available
# After:
not available
## Instruction: CMPri renamable $r3, 65536, 14, $noreg, implicit-def $cpsr
## address: 802b08
# Before:
not available
# After:
not available
## Instruction: $r2 = MOVi 1, 3, killed $cpsr, $noreg, implicit renamable $r2
## address: 802b0c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r2, 34, 14, $noreg, $noreg, debug-location !1437; ../clzsi2.c:25:40
## address: 802b10
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 16, 14, $noreg, $noreg
## address: 802b14
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r1, killed renamable $r2, 34, 14, $noreg, $noreg, debug-location !1438; ../clzsi2.c:26:14
## address: 802b18
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1439; ../clzsi2.c:26:7
## address: 802b1c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 65280, 14, $noreg, $noreg
## address: 802b20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1440; ../clzsi2.c:29:13
## address: 802b24
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1440; ../clzsi2.c:29:13
## address: 802b28
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1440; ../clzsi2.c:29:13
## address: 802b2c
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVi 8, 14, $noreg, $noreg
## address: 802b30
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r3, renamable $r1, 26, 14, $noreg, $noreg, debug-location !1443; ../clzsi2.c:30:13
## address: 802b34
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1444; ../clzsi2.c:30:7
## address: 802b38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !1445; ../clzsi2.c:31:7
## address: 802b3c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 240, 14, $noreg, $noreg
## address: 802b40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1446; ../clzsi2.c:33:13
## address: 802b44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1446; ../clzsi2.c:33:13
## address: 802b48
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1446; ../clzsi2.c:33:13
## address: 802b4c
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVi 4, 14, $noreg, $noreg
## address: 802b50
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi killed renamable $r2, renamable $r1, 18, 14, $noreg, $noreg, debug-location !1449; ../clzsi2.c:34:13
## address: 802b54
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1450; ../clzsi2.c:34:7
## address: 802b58
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !1451; ../clzsi2.c:35:7
## address: 802b5c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 12, 14, $noreg, $noreg
## address: 802b60
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1452; ../clzsi2.c:37:13
## address: 802b64
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1452; ../clzsi2.c:37:13
## address: 802b68
# Before:
not available
# After:
not available
## Instruction: renamable $lr = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1452; ../clzsi2.c:37:13
## address: 802b6c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 2, 14, $noreg, $noreg
## address: 802b70
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = nuw nsw SUBrsi renamable $r1, renamable $lr, 10, 14, $noreg, $noreg, debug-location !1455; ../clzsi2.c:38:13
## address: 802b74
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1456; ../clzsi2.c:38:7
## address: 802b78
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $lr, 10, 14, $noreg, $noreg, debug-location !1457; ../clzsi2.c:39:7
## address: 802b7c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1458; ../clzsi2.c:52:20
## address: 802b80
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
## address: 802b84
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsi killed renamable $r2, killed renamable $r3, 11, 14, $noreg, $noreg, debug-location !1459; ../clzsi2.c:52:37
## address: 802b88
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1459; ../clzsi2.c:52:37
## address: 802b8c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1460; ../clzsi2.c:52:25
## address: 802b90
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1461; ../clzsi2.c:52:14
## address: 802b94
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1462; ../clzsi2.c:52:5
## address: 802b98
# Before:
[
 Call of function prime |->
  [
   Function call at location prime_BB0_I7 |->
    [
     Call of function prime_main |->
      [
       Function call at location prime_main_BB0_I13 |->
        [
         Call of function prime_prime |->
          [
           Function call at location prime_prime_BB0_I8 |->
            [
             Call of function prime_even |->
              [
               Function call at location prime_even_BB0_I8 |->
                [
                 Call of function prime_divides |->
                  [
                   Function call at location prime_divides_BB0_I10 |->
                    [
                     Call of function __umodsi3 |->
                      [
                       Function call at location __umodsi3_BB0_I9 |->
                        [
                         Call of function __udivsi3 |->
                          [
                           Function call at location __udivsi3_BB4_I1 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff58,
 12 |-> top,
 13 |-> 0x7ffff58,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                            ]

                           Function call at location __udivsi3_BB4_I5 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff58,
 12 |-> top,
 13 |-> 0x7ffff58,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]

           Function call at location prime_prime_BB4_I2 |->
            [
             Call of function prime_divides |->
              [
               Function call at location prime_divides_BB0_I10 |->
                [
                 Call of function __umodsi3 |->
                  [
                   Function call at location __umodsi3_BB0_I9 |->
                    [
                     Call of function __udivsi3 |->
                      [
                       Function call at location __udivsi3_BB4_I1 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff60,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                        ]

                       Function call at location __udivsi3_BB4_I5 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff60,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7fffff0 |-> 0x7fffff8
}
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]

       Function call at location prime_main_BB1_I2 |->
        [
         Call of function prime_prime |->
          [
           Function call at location prime_prime_BB0_I8 |->
            [
             Call of function prime_even |->
              [
               Function call at location prime_even_BB0_I8 |->
                [
                 Call of function prime_divides |->
                  [
                   Function call at location prime_divides_BB0_I10 |->
                    [
                     Call of function __umodsi3 |->
                      [
                       Function call at location __umodsi3_BB0_I9 |->
                        [
                         Call of function __udivsi3 |->
                          [
                           Function call at location __udivsi3_BB4_I1 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff58,
 12 |-> top,
 13 |-> 0x7ffff58,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                            ]

                           Function call at location __udivsi3_BB4_I5 |->
                            [
                             Call of function __clzsi2 |->
                              Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff58,
 12 |-> top,
 13 |-> 0x7ffff58,
 14 |-> top,
 15 |-> top]
{0x7ffff58 |-> 0x7ffffa0
0x7ffff98 |-> 0x2
0x7ffffa0 |-> 0x7ffffb0
0x7ffffa8 |-> 0x2
0x7ffffb0 |-> 0x7ffffc0
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]

           Function call at location prime_prime_BB4_I2 |->
            [
             Call of function prime_divides |->
              [
               Function call at location prime_divides_BB0_I10 |->
                [
                 Call of function __umodsi3 |->
                  [
                   Function call at location __umodsi3_BB0_I9 |->
                    [
                     Call of function __udivsi3 |->
                      [
                       Function call at location __udivsi3_BB4_I1 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff60,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                        ]

                       Function call at location __udivsi3_BB4_I5 |->
                        [
                         Call of function __clzsi2 |->
                          Leaf:
[0 |-> top,
 1 |-> top,
 2 |-> top,
 3 |-> top,
 4 |-> top,
 5 |-> top,
 6 |-> top,
 7 |-> top,
 8 |-> top,
 9 |-> top,
 10 |-> top,
 11 |-> 0x7ffff60,
 12 |-> top,
 13 |-> 0x7ffff60,
 14 |-> top,
 15 |-> top]
{0x7ffff60 |-> 0x7ffffa8
0x7ffffa8 |-> 0x7ffffb8
0x7ffffb8 |-> 0x7ffffc8
0x7ffffc0 |-> 0x7ffffc8
0x7ffffc8 |-> 0x7ffffe0
0x7ffffe0 |-> 0x7fffff0
0x7ffffe8 |-> 0xd2b88, @prime_x
0x7ffffec |-> 0x1
0x7fffff0 |-> 0x7fffff8
}
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1462; ../clzsi2.c:52:5
## address: 802b9c
# Before:
not available
# After:
not available
#### Function: __cmpdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
## address: 802ba0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 20, 14, $noreg, debug-location !1465 :: (store (s32) into %ir.all + 4, basealign 8); ../cmpdi2.c:26:11
## address: 802ba4
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 16, 14, $noreg, debug-location !1465 :: (store (s32) into %ir.all, align 8); ../cmpdi2.c:26:11
## address: 802ba8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r3, $sp, 12, 14, $noreg, debug-location !1467 :: (store (s32) into %ir.all1 + 4, basealign 8); ../cmpdi2.c:28:11
## address: 802bac
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, $sp, 8, 14, $noreg, debug-location !1467 :: (store (s32) into %ir.all1, align 8); ../cmpdi2.c:28:11
## address: 802bb0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1469 :: (dereferenceable load (s32) from %ir.high); ../cmpdi2.c:29:13
## address: 802bb4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1471 :: (dereferenceable load (s32) from %ir.high3); ../cmpdi2.c:29:24
## address: 802bb8
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1473; ../cmpdi2.c:29:9
## address: 802bbc
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 10, killed $cpsr, debug-location !1473; ../cmpdi2.c:29:9
## address: 802bc0
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1473; ../cmpdi2.c:29:9
## address: 802bc4
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 802bc8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 802bcc
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1474; ../cmpdi2.c:30:9
## address: 802bd0
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = LDRi12 $sp, 20, 14, $noreg, debug-location !1476 :: (dereferenceable load (s32) from %ir.high5); ../cmpdi2.c:31:13
## address: 802bd4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1478 :: (dereferenceable load (s32) from %ir.high7); ../cmpdi2.c:31:24
## address: 802bd8
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1480; ../cmpdi2.c:31:9
## address: 802bdc
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 13, killed $cpsr, debug-location !1480; ../cmpdi2.c:31:9
## address: 802be0
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1480; ../cmpdi2.c:31:9
## address: 802be4
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
## address: 802be8
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 802bec
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1481; ../cmpdi2.c:32:9
## address: 802bf0
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1482 :: (dereferenceable load (s32) from %ir.low, align 8); ../cmpdi2.c:33:13
## address: 802bf4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1483 :: (dereferenceable load (s32) from %ir.low13, align 8); ../cmpdi2.c:33:23
## address: 802bf8
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1485; ../cmpdi2.c:33:9
## address: 802bfc
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.6, 2, killed $cpsr, debug-location !1485; ../cmpdi2.c:33:9
## address: 802c00
# Before:
not available
# After:
not available
## Instruction: B %bb.5, debug-location !1485; ../cmpdi2.c:33:9
## address: 802c04
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 802c08
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 802c0c
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1486; ../cmpdi2.c:34:9
## address: 802c10
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: renamable $r0 = LDRi12 $sp, 16, 14, $noreg, debug-location !1487 :: (dereferenceable load (s32) from %ir.low18, align 8); ../cmpdi2.c:35:13
## address: 802c14
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1488 :: (dereferenceable load (s32) from %ir.low20, align 8); ../cmpdi2.c:35:23
## address: 802c18
# Before:
bot
# After:
not available
## Instruction: CMPrr killed renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !1490; ../cmpdi2.c:35:9
## address: 802c1c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 9, killed $cpsr, debug-location !1490; ../cmpdi2.c:35:9
## address: 802c20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !1490; ../cmpdi2.c:35:9
## address: 802c24
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: renamable $r0 = MOVi 2, 14, $noreg, $noreg
## address: 802c28
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 802c2c
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1491; ../cmpdi2.c:36:9
## address: 802c30
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
## address: 802c34
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 802c38
# Before:
bot
# After:
not available
## Instruction: B %bb.9, debug-location !1492; ../cmpdi2.c:37:5
## address: 802c3c
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1493 :: (load (s32) from %stack.2); ../cmpdi2.c:0
## address: 802c40
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 24, 14, $noreg, $noreg, debug-location !1494; ../cmpdi2.c:38:1
## address: 802c44
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1494; ../cmpdi2.c:38:1
## address: 802c48
# Before:
not available
# After:
not available
#### Function: __ctzdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 802c64
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 4, 14, $noreg, debug-location !1501 :: (store (s32) into %ir.all + 4, basealign 8); ../ctzdi2.c:25:11
## address: 802c68
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 0, 14, $noreg, debug-location !1501 :: (store (s32) into %ir.all, align 8); ../ctzdi2.c:25:11
## address: 802c6c
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $sp, 0, 14, $noreg, debug-location !1502 :: (dereferenceable load (s32) from %ir.low, align 8); ../ctzdi2.c:26:28
## address: 802c70
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1505 :: (dereferenceable load (s32) from %ir.high); ../ctzdi2.c:27:31
## address: 802c74
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1506; ../ctzdi2.c:27:41
## address: 802c78
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r2, 14, $noreg, $noreg, debug-location !1506; ../ctzdi2.c:27:41
## address: 802c7c
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed renamable $r0, 0, killed $cpsr, $noreg, implicit renamable $r1, debug-location !1506; ../ctzdi2.c:27:41
## address: 802c80
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802c84
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802c88
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802c8c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802c90
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802c94
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802c98
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r3, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802c9c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r3, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802ca0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802ca4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802ca8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802cac
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802cb0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 802cb4
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = MULv5 killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802cb8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r3, 195, 14, $noreg, $noreg, debug-location !1507; ../ctzdi2.c:27:12
## address: 802cbc
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 32, 14, $noreg, $noreg
## address: 802cc0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r1, killed renamable $r3, 195, 14, $noreg, $noreg, debug-location !1509; ../ctzdi2.c:27:59
## address: 802cc4
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r2, 0, 14, $noreg, implicit-def $cpsr, debug-location !1509; ../ctzdi2.c:27:59
## address: 802cc8
# Before:
not available
# After:
not available
## Instruction: $r0 = MOVr killed renamable $r1, 0, killed $cpsr, $noreg, implicit renamable $r0, debug-location !1509; ../ctzdi2.c:27:59
## address: 802ccc
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1510; ../ctzdi2.c:27:5
## address: 802cd0
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1510; ../ctzdi2.c:27:5
## address: 802cd4
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 802cd8
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 802cdc
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
## address: 802ce0
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
## address: 802ce4
# Before:
not available
# After:
not available
#### Function: __ctzsi2
### Basic Block: 0
## Instruction: $r2 = MOVr killed $r0, 14, $noreg, $noreg
## address: 802ce8
# Before:
bot
# After:
not available
## Instruction: $r0 = MOVi 255, 14, $noreg, $noreg
## address: 802cec
# Before:
not available
# After:
not available
## Instruction: $r0 = ORRri $r0, 65280, 14, $noreg, $noreg
## address: 802cf0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr renamable $r2, killed renamable $r0, 14, $noreg, $noreg, debug-location !1512; ../ctzsi2.c:25:20
## address: 802cf4
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = RSBri renamable $r0, 0, 14, $noreg, def $cpsr, debug-location !1512; ../ctzsi2.c:25:20
## address: 802cf8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADCrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1512; ../ctzsi2.c:25:20
## address: 802cfc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsi killed renamable $r0, 34, 14, $noreg, $noreg, debug-location !1514; ../ctzsi2.c:25:40
## address: 802d00
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1515; ../ctzsi2.c:26:7
## address: 802d04
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 255, 14, $noreg, $noreg
## address: 802d08
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, renamable $r0, 3, 14, $noreg, $noreg, debug-location !1516; ../ctzsi2.c:29:13
## address: 802d0c
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1516; ../ctzsi2.c:29:13
## address: 802d10
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1516; ../ctzsi2.c:29:13
## address: 802d14
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 26, 14, $noreg, $noreg, debug-location !1518; ../ctzsi2.c:29:29
## address: 802d18
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1519; ../ctzsi2.c:30:7
## address: 802d1c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 26, 14, $noreg, $noreg, debug-location !1520; ../ctzsi2.c:31:7
## address: 802d20
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 15, 14, $noreg, $noreg
## address: 802d24
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1521; ../ctzsi2.c:33:13
## address: 802d28
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1521; ../ctzsi2.c:33:13
## address: 802d2c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1521; ../ctzsi2.c:33:13
## address: 802d30
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 18, 14, $noreg, $noreg, debug-location !1523; ../ctzsi2.c:33:27
## address: 802d34
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = MOVsr renamable $r2, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1524; ../ctzsi2.c:34:7
## address: 802d38
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 18, 14, $noreg, $noreg, debug-location !1525; ../ctzsi2.c:35:7
## address: 802d3c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 3, 14, $noreg, $noreg
## address: 802d40
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsr killed renamable $r1, killed renamable $r2, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1526; ../ctzsi2.c:37:13
## address: 802d44
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !1526; ../ctzsi2.c:37:13
## address: 802d48
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1526; ../ctzsi2.c:37:13
## address: 802d4c
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r1, 10, 14, $noreg, $noreg, debug-location !1528; ../ctzsi2.c:37:26
## address: 802d50
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsr renamable $r3, renamable $r12, 3, 14, $noreg, $noreg, debug-location !1529; ../ctzsi2.c:38:7
## address: 802d54
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsi killed renamable $r0, killed renamable $r1, 10, 14, $noreg, $noreg, debug-location !1530; ../ctzsi2.c:40:7
## address: 802d58
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi 1, 14, $noreg, $noreg
## address: 802d5c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, killed renamable $r2, 11, 14, $noreg, $noreg, debug-location !1531; ../ctzsi2.c:56:25
## address: 802d60
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nuw nsw RSBri killed renamable $r1, 2, 14, $noreg, $noreg, debug-location !1532; ../ctzsi2.c:56:20
## address: 802d64
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MVNi 1, 14, $noreg, $noreg
## address: 802d68
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = ORRrsr killed renamable $r2, killed renamable $r3, killed renamable $r12, 3, 14, $noreg, $noreg, debug-location !1533; ../ctzsi2.c:56:44
## address: 802d6c
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = nsw ADDri killed renamable $r2, 1, 14, $noreg, $noreg, debug-location !1533; ../ctzsi2.c:56:44
## address: 802d70
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ANDrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !1534; ../ctzsi2.c:56:32
## address: 802d74
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1535; ../ctzsi2.c:56:14
## address: 802d78
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1536; ../ctzsi2.c:56:5
## address: 802d7c
# Before:
not available
# After:
not available
#### Function: __divdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 802d80
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 802d84
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 802d88
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr killed $r3, 14, $noreg, $noreg
## address: 802d8c
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
## address: 802d90
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !1538; ../divdi3.c:23:20
## address: 802d94
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1540; ../divdi3.c:25:12
## address: 802d98
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1540; ../divdi3.c:25:12
## address: 802d9c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !1541; ../divdi3.c:25:19
## address: 802da0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1541; ../divdi3.c:25:19
## address: 802da4
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, $noreg, debug-location !1542; ../divdi3.c:26:12
## address: 802da8
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi renamable $lr, renamable $lr, 249, 14, $noreg, $noreg, debug-location !1542; ../divdi3.c:26:12
## address: 802dac
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SUBrsi killed renamable $r2, renamable $lr, 249, 14, $noreg, def $cpsr, debug-location !1543; ../divdi3.c:26:19
## address: 802db0
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = SBCrsi killed renamable $r3, renamable $lr, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1543; ../divdi3.c:26:19
## address: 802db4
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = EORrsi killed renamable $r12, killed renamable $lr, 249, 14, $noreg, $noreg, debug-location !1544; ../divdi3.c:27:9
## address: 802db8
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 802dbc
# Before:
bot
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !1545; ../divdi3.c:28:13
## address: 802dc0
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = MOVi 0, 14, $noreg, $noreg
## address: 802dc4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !1545 :: (store (s32) into stack); ../divdi3.c:28:13
## address: 802dc8
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1545; ../divdi3.c:28:13
## address: 802dcc
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1545 :: (load (s32) from %stack.0); ../divdi3.c:28:13
## address: 802dd0
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrr killed renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !1546; ../divdi3.c:28:44
## address: 802dd4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r2, 14, $noreg, $noreg, debug-location !1546; ../divdi3.c:28:44
## address: 802dd8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, renamable $r2, 14, $noreg, def $cpsr, debug-location !1547; ../divdi3.c:28:51
## address: 802ddc
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrr killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1547; ../divdi3.c:28:51
## address: 802de0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1548; ../divdi3.c:28:5
## address: 802de4
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1548; ../divdi3.c:28:5
## address: 802de8
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1548; ../divdi3.c:28:5
## address: 802dec
# Before:
not available
# After:
not available
#### Function: __divmoddi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r5, killed $r6, killed $r7, killed $r11, killed $lr
## address: 803698
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 16, 14, $noreg, $noreg
## address: 80369c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 8036a0
# Before:
not available
# After:
not available
## Instruction: STRi12 $r3, $sp, 12, 14, $noreg :: (store (s32) into %stack.0)
## address: 8036a4
# Before:
bot
# After:
not available
## Instruction: $r5 = MOVr killed $r2, 14, $noreg, $noreg
## address: 8036a8
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 8036ac
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.3)
## address: 8036b0
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 $r11, 8, 14, $noreg :: (load (s32) from %fixed-stack.0)
## address: 8036b4
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
## address: 8036b8
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r5, 14, $noreg, $noreg, debug-location !1913; ../divmoddi4.c:22:14
## address: 8036bc
# Before:
not available
# After:
not available
## Instruction: BL_pred @__divdi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !1913; ../divmoddi4.c:22:14
## address: 8036c0
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 0, 14, $noreg, debug-location !1913 :: (load (s32) from %stack.3); ../divmoddi4.c:22:14
## address: 8036c4
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !1913 :: (load (s32) from %stack.2); ../divmoddi4.c:22:14
## address: 8036c8
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !1913 :: (load (s32) from %stack.1); ../divmoddi4.c:22:14
## address: 8036cc
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $sp, 12, 14, $noreg, debug-location !1913 :: (load (s32) from %stack.0); ../divmoddi4.c:22:14
## address: 8036d0
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r4, early-clobber renamable $r7 = UMULLv5 renamable $r0, renamable $r5, 14, $noreg, $noreg, debug-location !1914; ../divmoddi4.c:23:16
## address: 8036d4
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r6 = MLAv5 renamable $r0, killed renamable $lr, killed renamable $r7, 14, $noreg, $noreg, debug-location !1914; ../divmoddi4.c:23:16
## address: 8036d8
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $lr = MLAv5 renamable $r1, killed renamable $r5, killed renamable $r6, 14, $noreg, $noreg, debug-location !1914; ../divmoddi4.c:23:16
## address: 8036dc
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrr killed renamable $r12, killed renamable $r4, 14, $noreg, def $cpsr, debug-location !1915; ../divmoddi4.c:23:12
## address: 8036e0
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = SBCrr killed renamable $r2, killed renamable $lr, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !1915; ../divmoddi4.c:23:12
## address: 8036e4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, renamable $r3, 0, 14, $noreg, debug-location !1916 :: (store (s32) into %ir.rem, align 8); ../divmoddi4.c:23:8
## address: 8036e8
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r2, killed renamable $r3, 4, 14, $noreg, debug-location !1916 :: (store (s32) into %ir.rem + 4, basealign 8); ../divmoddi4.c:23:8
## address: 8036ec
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 16, 14, $noreg, $noreg, debug-location !1917; ../divmoddi4.c:24:3
## address: 8036f0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r5, def $r6, def $r7, def $r11, def $lr, debug-location !1917; ../divmoddi4.c:24:3
## address: 8036f4
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !1917; ../divmoddi4.c:24:3
## address: 8036f8
# Before:
not available
# After:
not available
#### Function: __divmodsi4
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 8036fc
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 803700
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 803704
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 803708
# Before:
bot
# After:
not available
## Instruction: STRi12 $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.2)
## address: 80370c
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.1)
## address: 803710
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1919; ../divmodsi4.c:22:14
## address: 803714
# Before:
not available
# After:
not available
## Instruction: $r12 = LDRi12 $sp, 4, 14, $noreg, debug-location !1919 :: (load (s32) from %stack.2); ../divmodsi4.c:22:14
## address: 803718
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1919 :: (load (s32) from %stack.1); ../divmodsi4.c:22:14
## address: 80371c
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -4, 14, $noreg, debug-location !1919 :: (load (s32) from %stack.0); ../divmodsi4.c:22:14
## address: 803720
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r3 = nsw MULv5 renamable $r0, killed renamable $r12, 14, $noreg, $noreg, debug-location !1920; ../divmodsi4.c:23:16
## address: 803724
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrr killed renamable $r1, killed renamable $r3, 14, $noreg, $noreg, debug-location !1921; ../divmodsi4.c:23:12
## address: 803728
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r1, killed renamable $r2, 0, 14, $noreg, debug-location !1922 :: (store (s32) into %ir.rem); ../divmodsi4.c:23:8
## address: 80372c
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1923; ../divmodsi4.c:24:3
## address: 803730
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1923; ../divmodsi4.c:24:3
## address: 803734
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1923; ../divmodsi4.c:24:3
## address: 803738
# Before:
not available
# After:
not available
#### Function: __divsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 80373c
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 803740
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 803744
# Before:
not available
# After:
not available
## Instruction: $r3 = MOVr killed $r1, 14, $noreg, $noreg
## address: 803748
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr killed $r0, 14, $noreg, $noreg
## address: 80374c
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !1925; ../divsi3.c:25:20
## address: 803750
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !1927; ../divsi3.c:27:12
## address: 803754
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, killed renamable $r1, 249, 14, $noreg, $noreg, debug-location !1928; ../divsi3.c:27:19
## address: 803758
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1929; ../divsi3.c:28:12
## address: 80375c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !1930; ../divsi3.c:28:19
## address: 803760
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r2, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !1931; ../divsi3.c:29:9
## address: 803764
# Before:
not available
# After:
not available
## Instruction: STRi12 $r2, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 803768
# Before:
bot
# After:
not available
## Instruction: BL &__udivsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !1932; ../divsi3.c:36:22
## address: 80376c
# Before:
not available
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1932 :: (load (s32) from %stack.0); ../divsi3.c:36:22
## address: 803770
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1933; ../divsi3.c:36:33
## address: 803774
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1934; ../divsi3.c:36:40
## address: 803778
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !1935; ../divsi3.c:36:5
## address: 80377c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !1935; ../divsi3.c:36:5
## address: 803780
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1935; ../divsi3.c:36:5
## address: 803784
# Before:
not available
# After:
not available
#### Function: __ffsdi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 803788
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 12, 14, $noreg, debug-location !1938 :: (store (s32) into %ir.all + 4, basealign 8); ../ffsdi2.c:25:11
## address: 80378c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 8, 14, $noreg, debug-location !1938 :: (store (s32) into %ir.all, align 8); ../ffsdi2.c:25:11
## address: 803790
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !1939 :: (dereferenceable load (s32) from %ir.low, align 8); ../ffsdi2.c:26:13
## address: 803794
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1941; ../ffsdi2.c:26:9
## address: 803798
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1941; ../ffsdi2.c:26:9
## address: 80379c
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1941; ../ffsdi2.c:26:9
## address: 8037a0
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1943 :: (dereferenceable load (s32) from %ir.high); ../ffsdi2.c:28:17
## address: 8037a4
# Before:
bot
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1945; ../ffsdi2.c:28:13
## address: 8037a8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 1, killed $cpsr, debug-location !1945; ../ffsdi2.c:28:13
## address: 8037ac
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !1945; ../ffsdi2.c:28:13
## address: 8037b0
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 8037b4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
## address: 8037b8
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1946; ../ffsdi2.c:29:13
## address: 8037bc
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !1948 :: (dereferenceable load (s32) from %ir.high5); ../ffsdi2.c:30:34
## address: 8037c0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037c4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037c8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8037cc
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037d0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037d4
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8037d8
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037dc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037e0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037e4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037e8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8037ec
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037f0
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8037f4
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1949; ../ffsdi2.c:30:16
## address: 8037f8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 33, 14, $noreg, $noreg
## address: 8037fc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1950; ../ffsdi2.c:30:40
## address: 803800
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
## address: 803804
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1951; ../ffsdi2.c:30:9
## address: 803808
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !1952 :: (dereferenceable load (s32) from %ir.low8, align 8); ../ffsdi2.c:32:30
## address: 80380c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803810
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803814
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 803818
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 80381c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803820
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 803824
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803828
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 80382c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803830
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803834
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 803838
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 80383c
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 803840
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1953; ../ffsdi2.c:32:12
## address: 803844
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
## address: 803848
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1954; ../ffsdi2.c:32:35
## address: 80384c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
## address: 803850
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1955; ../ffsdi2.c:32:5
## address: 803854
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !1956 :: (load (s32) from %stack.1); ../ffsdi2.c:0
## address: 803858
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 16, 14, $noreg, $noreg, debug-location !1957; ../ffsdi2.c:33:1
## address: 80385c
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1957; ../ffsdi2.c:33:1
## address: 803860
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 803864
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 803868
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
## address: 80386c
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
## address: 803870
# Before:
not available
# After:
not available
#### Function: __ffssi2
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 803874
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 803878
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1960; ../ffssi2.c:24:9
## address: 80387c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 1, killed $cpsr, debug-location !1960; ../ffssi2.c:24:9
## address: 803880
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1960; ../ffssi2.c:24:9
## address: 803884
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 803888
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 80388c
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1961; ../ffssi2.c:26:9
## address: 803890
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !1962 :: (load (s32) from %stack.0); ../ffssi2.c:28:12
## address: 803894
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SUBri renamable $r1, 1, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 803898
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = BICrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 80389c
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.0, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8038a0
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi killed renamable $r1, renamable $r0, 11, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038a4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038a8
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.1, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8038ac
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ANDrsi renamable $r2, renamable $r0, 19, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038b0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038b4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038b8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ADDrsi killed renamable $r0, renamable $r0, 35, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038bc
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = LDRcp %const.2, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8038c0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ANDrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038c4
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = LDRcp %const.3, 0, 14, $noreg :: (load (s32) from constant-pool)
## address: 8038c8
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = MULv5 killed renamable $r0, killed renamable $r2, 14, $noreg, $noreg, debug-location !1962; ../ffssi2.c:28:12
## address: 8038cc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 1, 14, $noreg, $noreg
## address: 8038d0
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nuw nsw ADDrsi killed renamable $r0, killed renamable $r1, 195, 14, $noreg, $noreg, debug-location !1963; ../ffssi2.c:28:29
## address: 8038d4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 8038d8
# Before:
bot
# After:
not available
## Instruction: B %bb.3, debug-location !1964; ../ffssi2.c:28:5
## address: 8038dc
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !1965 :: (load (s32) from %stack.1); ../ffssi2.c:0
## address: 8038e0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 8, 14, $noreg, $noreg, debug-location !1966; ../ffssi2.c:29:1
## address: 8038e4
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !1966; ../ffssi2.c:29:1
## address: 8038e8
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 8038ec
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 8038f0
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 2, %const.2, 4
## address: 8038f4
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 3, %const.3, 4
## address: 8038f8
# Before:
not available
# After:
not available
#### Function: __lshrdi3
### Basic Block: 0
## Instruction: $sp = frame-setup SUBri killed $sp, 40, 14, $noreg, $noreg
## address: 8038fc
# Before:
bot
# After:
not available
## Instruction: STRi12 $r2, $sp, 12, 14, $noreg :: (store (s32) into %stack.4)
## address: 803900
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r1, 14, $noreg, $noreg
## address: 803904
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 16, 14, $noreg :: (store (s32) into %stack.3)
## address: 803908
# Before:
bot
# After:
not available
## Instruction: $r3 = MOVr $r0, 14, $noreg, $noreg
## address: 80390c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $sp, 20, 14, $noreg :: (store (s32) into %stack.2)
## address: 803910
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r1, $sp, 36, 14, $noreg, debug-location !1969 :: (store (s32) into %ir.all + 4, basealign 8); ../lshrdi3.c:29:15
## address: 803914
# Before:
bot
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 32, 14, $noreg, debug-location !1969 :: (store (s32) into %ir.all, align 8); ../lshrdi3.c:29:15
## address: 803918
# Before:
bot
# After:
not available
## Instruction: TSTri renamable $r2, 32, 14, $noreg, implicit-def $cpsr, debug-location !1971; ../lshrdi3.c:30:9
## address: 80391c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.2, 0, killed $cpsr, debug-location !1971; ../lshrdi3.c:30:9
## address: 803920
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !1971; ../lshrdi3.c:30:9
## address: 803924
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg :: (load (s32) from %stack.4)
## address: 803928
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 80392c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1974 :: (store (s32) into %ir.high); ../lshrdi3.c:32:23
## address: 803930
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1976 :: (dereferenceable load (s32) from %ir.high2); ../lshrdi3.c:33:32
## address: 803934
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw SUBri renamable $r1, 32, 14, $noreg, $noreg, debug-location !1977; ../lshrdi3.c:33:43
## address: 803938
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r1, 3, 14, $noreg, $noreg, debug-location !1978; ../lshrdi3.c:33:37
## address: 80393c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1980 :: (store (s32) into %ir.low, align 8); ../lshrdi3.c:33:22
## address: 803940
# Before:
bot
# After:
not available
## Instruction: B %bb.5, debug-location !1981; ../lshrdi3.c:34:5
## address: 803944
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !1983 :: (load (s32) from %stack.4); ../lshrdi3.c:37:13
## address: 803948
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !1983; ../lshrdi3.c:37:13
## address: 80394c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !1983; ../lshrdi3.c:37:13
## address: 803950
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !1983; ../lshrdi3.c:37:13
## address: 803954
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: $r0 = LDRi12 $sp, 16, 14, $noreg :: (load (s32) from %stack.3)
## address: 803958
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 20, 14, $noreg :: (load (s32) from %stack.2)
## address: 80395c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 803960
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 803964
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !1984; ../lshrdi3.c:38:13
## address: 803968
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: $r2 = LDRi12 $sp, 12, 14, $noreg, debug-location !1986 :: (load (s32) from %stack.4); ../lshrdi3.c:39:34
## address: 80396c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1986 :: (dereferenceable load (s32) from %ir.high6); ../lshrdi3.c:39:34
## address: 803970
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1987; ../lshrdi3.c:39:39
## address: 803974
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 28, 14, $noreg, debug-location !1990 :: (store (s32) into %ir.high9); ../lshrdi3.c:39:24
## address: 803978
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 32, 14, $noreg, debug-location !1995 :: (dereferenceable load (s32) from %ir.low14, align 8); ../lshrdi3.c:40:72
## address: 80397c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 36, 14, $noreg, debug-location !1992 :: (dereferenceable load (s32) from %ir.high11); ../lshrdi3.c:40:33
## address: 803980
# Before:
bot
# After:
not available
## Instruction: renamable $r3 = nsw RSBri renamable $r2, 32, 14, $noreg, $noreg, debug-location !1993; ../lshrdi3.c:40:55
## address: 803984
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVsr killed renamable $r0, killed renamable $r3, 2, 14, $noreg, $noreg, debug-location !1994; ../lshrdi3.c:40:38
## address: 803988
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrsr killed renamable $r0, killed renamable $r1, renamable $r2, 3, 14, $noreg, $noreg, debug-location !1997; ../lshrdi3.c:40:61
## address: 80398c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r0, $sp, 24, 14, $noreg, debug-location !1999 :: (store (s32) into %ir.low17, align 8); ../lshrdi3.c:40:22
## address: 803990
# Before:
bot
# After:
not available
## Instruction: B %bb.5
## address: 803994
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: renamable $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !2000 :: (dereferenceable load (s32) from %ir.all19, align 8); ../lshrdi3.c:42:19
## address: 803998
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !2000 :: (dereferenceable load (s32) from %ir.all19 + 4, basealign 8); ../lshrdi3.c:42:19
## address: 80399c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.6)
## address: 8039a0
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 8, 14, $noreg :: (store (s32) into %stack.5)
## address: 8039a4
# Before:
bot
# After:
not available
## Instruction: B %bb.6, debug-location !2001; ../lshrdi3.c:42:5
## address: 8039a8
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !2002 :: (load (s32) from %stack.6); ../lshrdi3.c:0
## address: 8039ac
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !2002 :: (load (s32) from %stack.5); ../lshrdi3.c:0
## address: 8039b0
# Before:
bot
# After:
not available
## Instruction: $sp = frame-destroy ADDri killed $sp, 40, 14, $noreg, $noreg, debug-location !2003; ../lshrdi3.c:43:1
## address: 8039b4
# Before:
not available
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !2003; ../lshrdi3.c:43:1
## address: 8039b8
# Before:
not available
# After:
not available
#### Function: __moddi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 8039bc
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 8039c0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 16, 14, $noreg, $noreg
## address: 8039c4
# Before:
not available
# After:
not available
## Instruction: $r12 = MOVr killed $r1, 14, $noreg, $noreg
## address: 8039c8
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 4, 14, $noreg :: (store (s32) into %stack.1)
## address: 8039cc
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = ADDrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !2005; ../moddi3.c:24:17
## address: 8039d0
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi killed renamable $r1, renamable $r3, 249, 14, $noreg, $noreg, debug-location !2005; ../moddi3.c:24:17
## address: 8039d4
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = ADCrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2005; ../moddi3.c:24:17
## address: 8039d8
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = EORrsi killed renamable $r1, killed renamable $r3, 249, 14, $noreg, $noreg, debug-location !2005; ../moddi3.c:24:17
## address: 8039dc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !2007; ../moddi3.c:26:12
## address: 8039e0
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !2007; ../moddi3.c:26:12
## address: 8039e4
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !2008; ../moddi3.c:26:17
## address: 8039e8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2008; ../moddi3.c:26:17
## address: 8039ec
# Before:
not available
# After:
not available
## Instruction: $lr = MOVr $sp, 14, $noreg, $noreg, debug-location !2009; ../moddi3.c:28:5
## address: 8039f0
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = ADDri $sp, 8, 14, $noreg, $noreg
## address: 8039f4
# Before:
not available
# After:
not available
## Instruction: STRi12 killed renamable $r12, killed renamable $lr, 0, 14, $noreg, debug-location !2009 :: (store (s32) into stack); ../moddi3.c:28:5
## address: 8039f8
# Before:
bot
# After:
not available
## Instruction: BL_pred @__udivmoddi4, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !2009; ../moddi3.c:28:5
## address: 8039fc
# Before:
not available
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 4, 14, $noreg, debug-location !2009 :: (load (s32) from %stack.1); ../moddi3.c:28:5
## address: 803a00
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = LDRi12 $sp, 8, 14, $noreg, debug-location !2010 :: (dereferenceable load (s32) from %ir.r, align 8); ../moddi3.c:29:21
## address: 803a04
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !2010 :: (dereferenceable load (s32) from %ir.r + 4, basealign 8); ../moddi3.c:29:21
## address: 803a08
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !2011; ../moddi3.c:29:23
## address: 803a0c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, $noreg, debug-location !2011; ../moddi3.c:29:23
## address: 803a10
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = SUBrsi killed renamable $r0, renamable $r2, 249, 14, $noreg, def $cpsr, debug-location !2012; ../moddi3.c:29:28
## address: 803a14
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SBCrsi killed renamable $r1, killed renamable $r2, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2012; ../moddi3.c:29:28
## address: 803a18
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !2013; ../moddi3.c:29:5
## address: 803a1c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !2013; ../moddi3.c:29:5
## address: 803a20
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !2013; ../moddi3.c:29:5
## address: 803a24
# Before:
not available
# After:
not available
#### Function: __modsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 803a28
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 803a2c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 8, 14, $noreg, $noreg
## address: 803a30
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.1)
## address: 803a34
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.0)
## address: 803a38
# Before:
bot
# After:
not available
## Instruction: BL_pred @__divsi3, 14, $noreg, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !2015; ../modsi3.c:22:16
## address: 803a3c
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 0, 14, $noreg, debug-location !2015 :: (load (s32) from %stack.1); ../modsi3.c:22:16
## address: 803a40
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !2015; ../modsi3.c:22:16
## address: 803a44
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !2016 :: (load (s32) from %stack.0); ../modsi3.c:22:31
## address: 803a48
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r1 = nsw MULv5 killed renamable $r2, killed renamable $r3, 14, $noreg, $noreg, debug-location !2016; ../modsi3.c:22:31
## address: 803a4c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !2017; ../modsi3.c:22:14
## address: 803a50
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !2018; ../modsi3.c:22:5
## address: 803a54
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !2018; ../modsi3.c:22:5
## address: 803a58
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, debug-location !2018; ../modsi3.c:22:5
## address: 803a5c
# Before:
not available
# After:
not available
#### Function: __mulvdi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r4, killed $r10, killed $r11, killed $lr
## address: 803a60
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup ADDri killed $sp, 8, 14, $noreg, $noreg
## address: 803a64
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 48, 14, $noreg, $noreg
## address: 803a68
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r3, $r11, -24, 14, $noreg :: (store (s32) into %stack.3)
## address: 803a6c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -20, 14, $noreg :: (store (s32) into %stack.2)
## address: 803a70
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r1, 14, $noreg, $noreg
## address: 803a74
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -16, 14, $noreg :: (store (s32) into %stack.1)
## address: 803a78
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg
## address: 803a7c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $r11, -12, 14, $noreg :: (store (s32) into %stack.0)
## address: 803a80
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri killed renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !2020; ../mulvdi3.c:27:11
## address: 803a84
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !2020; ../mulvdi3.c:27:11
## address: 803a88
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2021; ../mulvdi3.c:27:9
## address: 803a8c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !2021; ../mulvdi3.c:27:9
## address: 803a90
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !2021; ../mulvdi3.c:27:9
## address: 803a94
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !2022 :: (load (s32) from %stack.2); ../mulvdi3.c:29:15
## address: 803a98
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !2022 :: (load (s32) from %stack.3); ../mulvdi3.c:29:15
## address: 803a9c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !2022; ../mulvdi3.c:29:15
## address: 803aa0
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2023; ../mulvdi3.c:29:20
## address: 803aa4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !2023; ../mulvdi3.c:29:20
## address: 803aa8
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !2023; ../mulvdi3.c:29:20
## address: 803aac
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !2024 :: (load (s32) from %stack.3); ../mulvdi3.c:29:25
## address: 803ab0
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !2024 :: (load (s32) from %stack.2); ../mulvdi3.c:29:25
## address: 803ab4
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !2024; ../mulvdi3.c:29:25
## address: 803ab8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !2024; ../mulvdi3.c:29:25
## address: 803abc
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2025; ../mulvdi3.c:29:13
## address: 803ac0
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !2025; ../mulvdi3.c:29:13
## address: 803ac4
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !2025; ../mulvdi3.c:29:13
## address: 803ac8
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !2026; ../mulvdi3.c:30:13
## address: 803acc
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2027 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
## address: 803ad0
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2027 :: (load (s32) from constant-pool); ../mulvdi3.c:31:9
## address: 803ad4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
## address: 803ad8
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2027; ../mulvdi3.c:31:9
## address: 803adc
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -20, 14, $noreg, debug-location !2028 :: (load (s32) from %stack.2); ../mulvdi3.c:33:11
## address: 803ae0
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -24, 14, $noreg, debug-location !2028 :: (load (s32) from %stack.3); ../mulvdi3.c:33:11
## address: 803ae4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORri renamable $r1, -2147483648, 14, $noreg, $noreg, debug-location !2028; ../mulvdi3.c:33:11
## address: 803ae8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !2028; ../mulvdi3.c:33:11
## address: 803aec
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2029; ../mulvdi3.c:33:9
## address: 803af0
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !2029; ../mulvdi3.c:33:9
## address: 803af4
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !2029; ../mulvdi3.c:33:9
## address: 803af8
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !2030 :: (load (s32) from %stack.0); ../mulvdi3.c:35:15
## address: 803afc
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !2030 :: (load (s32) from %stack.1); ../mulvdi3.c:35:15
## address: 803b00
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = ORRrr renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !2030; ../mulvdi3.c:35:15
## address: 803b04
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2031; ../mulvdi3.c:35:20
## address: 803b08
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !2031; ../mulvdi3.c:35:20
## address: 803b0c
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !2031; ../mulvdi3.c:35:20
## address: 803b10
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r1 = LDRi12 $r11, -16, 14, $noreg, debug-location !2032 :: (load (s32) from %stack.1); ../mulvdi3.c:35:25
## address: 803b14
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !2032 :: (load (s32) from %stack.0); ../mulvdi3.c:35:25
## address: 803b18
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORri renamable $r0, 1, 14, $noreg, $noreg, debug-location !2032; ../mulvdi3.c:35:25
## address: 803b1c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, renamable $r1, 14, $noreg, $noreg, debug-location !2032; ../mulvdi3.c:35:25
## address: 803b20
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2033; ../mulvdi3.c:35:13
## address: 803b24
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !2033; ../mulvdi3.c:35:13
## address: 803b28
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !2033; ../mulvdi3.c:35:13
## address: 803b2c
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !2034; ../mulvdi3.c:36:13
## address: 803b30
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2035 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
## address: 803b34
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2035 :: (load (s32) from constant-pool); ../mulvdi3.c:37:9
## address: 803b38
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
## address: 803b3c
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2035; ../mulvdi3.c:37:9
## address: 803b40
# Before:
not available
# After:
not available
### Basic Block: a
## Instruction: $r3 = LDRi12 $r11, -24, 14, $noreg, debug-location !2036 :: (load (s32) from %stack.3); ../mulvdi3.c:39:19
## address: 803b44
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -20, 14, $noreg, debug-location !2036 :: (load (s32) from %stack.2); ../mulvdi3.c:39:19
## address: 803b48
# Before:
bot
# After:
not available
## Instruction: $r12 = LDRi12 $r11, -16, 14, $noreg, debug-location !2036 :: (load (s32) from %stack.1); ../mulvdi3.c:39:19
## address: 803b4c
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $r11, -12, 14, $noreg, debug-location !2036 :: (load (s32) from %stack.0); ../mulvdi3.c:39:19
## address: 803b50
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r12, 249, 14, $noreg, $noreg, debug-location !2036; ../mulvdi3.c:39:19
## address: 803b54
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 0, 14, $noreg :: (store (s32) into %stack.11)
## address: 803b58
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 4, 14, $noreg :: (store (s32) into %stack.10)
## address: 803b5c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, debug-location !2037; ../mulvdi3.c:40:23
## address: 803b60
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r12, renamable $r12, 249, 14, $noreg, $noreg, debug-location !2037; ../mulvdi3.c:40:23
## address: 803b64
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = SUBrsi killed renamable $r1, renamable $r12, 249, 14, $noreg, def $cpsr, debug-location !2038; ../mulvdi3.c:40:29
## address: 803b68
# Before:
not available
# After:
not available
## Instruction: STRi12 $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.9)
## address: 803b6c
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = SBCrsi killed renamable $r0, renamable $r12, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2038; ../mulvdi3.c:40:29
## address: 803b70
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 12, 14, $noreg :: (store (s32) into %stack.8)
## address: 803b74
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = MOVsi renamable $r3, 249, 14, $noreg, $noreg, debug-location !2039; ../mulvdi3.c:41:19
## address: 803b78
# Before:
not available
# After:
not available
## Instruction: STRi12 $r12, $sp, 16, 14, $noreg :: (store (s32) into %stack.7)
## address: 803b7c
# Before:
bot
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 20, 14, $noreg :: (store (s32) into %stack.6)
## address: 803b80
# Before:
bot
# After:
not available
## Instruction: renamable $r12 = EORrsi renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, debug-location !2040; ../mulvdi3.c:42:23
## address: 803b84
# Before:
not available
# After:
not available
## Instruction: renamable $r2 = EORrsi renamable $r3, renamable $r3, 249, 14, $noreg, $noreg, debug-location !2040; ../mulvdi3.c:42:23
## address: 803b88
# Before:
not available
# After:
not available
## Instruction: renamable $r12 = SUBrsi killed renamable $r12, renamable $r3, 249, 14, $noreg, def $cpsr, debug-location !2041; ../mulvdi3.c:42:29
## address: 803b8c
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r12, $sp, 24, 14, $noreg :: (store (s32) into %stack.5)
## address: 803b90
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = SBCrsi killed renamable $r2, renamable $r3, 249, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2041; ../mulvdi3.c:42:29
## address: 803b94
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r2, $sp, 28, 14, $noreg :: (store (s32) into %stack.4)
## address: 803b98
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = SUBri renamable $r1, 2, 14, $noreg, def $cpsr, debug-location !2042; ../mulvdi3.c:43:15
## address: 803b9c
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !2042; ../mulvdi3.c:43:15
## address: 803ba0
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !2043; ../mulvdi3.c:43:19
## address: 803ba4
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !2043; ../mulvdi3.c:43:19
## address: 803ba8
# Before:
not available
# After:
not available
### Basic Block: b
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !2044 :: (load (s32) from %stack.4); ../mulvdi3.c:43:28
## address: 803bac
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !2044 :: (load (s32) from %stack.5); ../mulvdi3.c:43:28
## address: 803bb0
# Before:
bot
# After:
not available
## Instruction: dead renamable $r1 = RSBri renamable $r1, 1, 14, $noreg, def $cpsr, debug-location !2044; ../mulvdi3.c:43:28
## address: 803bb4
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = RSCri renamable $r0, 0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !2044; ../mulvdi3.c:43:28
## address: 803bb8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 11, killed $cpsr, debug-location !2045; ../mulvdi3.c:43:9
## address: 803bbc
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !2045; ../mulvdi3.c:43:9
## address: 803bc0
# Before:
not available
# After:
not available
### Basic Block: c
## Instruction: B %bb.21, debug-location !2046; ../mulvdi3.c:44:9
## address: 803bc4
# Before:
not available
# After:
not available
### Basic Block: d
## Instruction: $r1 = LDRi12 $sp, 4, 14, $noreg, debug-location !2047 :: (load (s32) from %stack.10); ../mulvdi3.c:45:12
## address: 803bc8
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 20, 14, $noreg, debug-location !2047 :: (load (s32) from %stack.6); ../mulvdi3.c:45:12
## address: 803bcc
# Before:
bot
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !2047 :: (load (s32) from %stack.11); ../mulvdi3.c:45:12
## address: 803bd0
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 16, 14, $noreg, debug-location !2047 :: (load (s32) from %stack.7); ../mulvdi3.c:45:12
## address: 803bd4
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrr renamable $r0, renamable $r3, 14, $noreg, $noreg, debug-location !2047; ../mulvdi3.c:45:12
## address: 803bd8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = EORrr renamable $r1, renamable $r2, 14, $noreg, $noreg, debug-location !2047; ../mulvdi3.c:45:12
## address: 803bdc
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = ORRrr killed renamable $r0, killed renamable $r1, 14, $noreg, $noreg, debug-location !2047; ../mulvdi3.c:45:12
## address: 803be0
# Before:
not available
# After:
not available
## Instruction: CMPri killed renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2048; ../mulvdi3.c:45:9
## address: 803be4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !2048; ../mulvdi3.c:45:9
## address: 803be8
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !2048; ../mulvdi3.c:45:9
## address: 803bec
# Before:
not available
# After:
not available
### Basic Block: e
## Instruction: $r3 = LDRi12 $sp, 28, 14, $noreg, debug-location !2049 :: (load (s32) from %stack.4); ../mulvdi3.c:47:25
## address: 803bf0
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $sp, 24, 14, $noreg, debug-location !2049 :: (load (s32) from %stack.5); ../mulvdi3.c:47:25
## address: 803bf4
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi 0, 14, $noreg, $noreg
## address: 803bf8
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MVNi -2147483648, 14, $noreg, $noreg
## address: 803bfc
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !2049; ../mulvdi3.c:47:25
## address: 803c00
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !2049 :: (load (s32) from %stack.9); ../mulvdi3.c:47:25
## address: 803c04
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !2049; ../mulvdi3.c:47:25
## address: 803c08
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !2049 :: (load (s32) from %stack.8); ../mulvdi3.c:47:25
## address: 803c0c
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !2050; ../mulvdi3.c:47:19
## address: 803c10
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !2050; ../mulvdi3.c:47:19
## address: 803c14
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 10, killed $cpsr, debug-location !2051; ../mulvdi3.c:47:13
## address: 803c18
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !2051; ../mulvdi3.c:47:13
## address: 803c1c
# Before:
not available
# After:
not available
### Basic Block: f
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2052 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
## address: 803c20
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2052 :: (load (s32) from constant-pool); ../mulvdi3.c:48:13
## address: 803c24
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
## address: 803c28
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2052; ../mulvdi3.c:48:13
## address: 803c2c
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: B %bb.20, debug-location !2053; ../mulvdi3.c:49:5
## address: 803c30
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 28, 14, $noreg, debug-location !2054 :: (load (s32) from %stack.4); ../mulvdi3.c:52:27
## address: 803c34
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 24, 14, $noreg, debug-location !2054 :: (load (s32) from %stack.5); ../mulvdi3.c:52:27
## address: 803c38
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = RSBri renamable $r1, 0, 14, $noreg, def $cpsr, debug-location !2054; ../mulvdi3.c:52:27
## address: 803c3c
# Before:
not available
# After:
not available
## Instruction: renamable $r3 = RSCri renamable $r0, 0, 14, $noreg, $noreg, implicit killed $cpsr, debug-location !2054; ../mulvdi3.c:52:27
## address: 803c40
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi 0, 14, $noreg, $noreg
## address: 803c44
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = MOVi -2147483648, 14, $noreg, $noreg
## address: 803c48
# Before:
not available
# After:
not available
## Instruction: BL &__divdi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit killed $r3, implicit-def $sp, implicit-def $r0, implicit-def $r1, debug-location !2055; ../mulvdi3.c:52:25
## address: 803c4c
# Before:
not available
# After:
not available
## Instruction: $r3 = LDRi12 $sp, 8, 14, $noreg, debug-location !2055 :: (load (s32) from %stack.9); ../mulvdi3.c:52:25
## address: 803c50
# Before:
bot
# After:
not available
## Instruction: $r2 = MOVr $r0, 14, $noreg, $noreg, debug-location !2055; ../mulvdi3.c:52:25
## address: 803c54
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !2055 :: (load (s32) from %stack.8); ../mulvdi3.c:52:25
## address: 803c58
# Before:
bot
# After:
not available
## Instruction: dead renamable $r2 = SUBrr killed renamable $r2, renamable $r3, 14, $noreg, def $cpsr, debug-location !2056; ../mulvdi3.c:52:19
## address: 803c5c
# Before:
not available
# After:
not available
## Instruction: dead renamable $r0 = SBCrr killed renamable $r1, renamable $r0, 14, $noreg, def $cpsr, implicit killed $cpsr, debug-location !2056; ../mulvdi3.c:52:19
## address: 803c60
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 10, killed $cpsr, debug-location !2057; ../mulvdi3.c:52:13
## address: 803c64
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !2057; ../mulvdi3.c:52:13
## address: 803c68
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2058 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
## address: 803c6c
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2058 :: (load (s32) from constant-pool); ../mulvdi3.c:53:13
## address: 803c70
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
## address: 803c74
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2058; ../mulvdi3.c:53:13
## address: 803c78
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: B %bb.20
## address: 803c7c
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: B %bb.21, debug-location !2059; ../mulvdi3.c:55:5
## address: 803c80
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $r2 = LDRi12 $r11, -16, 14, $noreg, debug-location !2060 :: (load (s32) from %stack.1); ../mulvdi3.c:0
## address: 803c84
# Before:
bot
# After:
not available
## Instruction: $r3 = LDRi12 $r11, -20, 14, $noreg, debug-location !2060 :: (load (s32) from %stack.2); ../mulvdi3.c:0
## address: 803c88
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -12, 14, $noreg, debug-location !2060 :: (load (s32) from %stack.0); ../mulvdi3.c:0
## address: 803c8c
# Before:
bot
# After:
not available
## Instruction: $lr = LDRi12 $r11, -24, 14, $noreg, debug-location !2060 :: (load (s32) from %stack.3); ../mulvdi3.c:0
## address: 803c90
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0, early-clobber renamable $r4 = UMULLv5 renamable $r1, renamable $r3, 14, $noreg, $noreg, debug-location !2060; ../mulvdi3.c:0
## address: 803c94
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r12 = MLAv5 killed renamable $r1, killed renamable $lr, killed renamable $r4, 14, $noreg, $noreg, debug-location !2060; ../mulvdi3.c:0
## address: 803c98
# Before:
not available
# After:
not available
## Instruction: early-clobber renamable $r1 = MLAv5 killed renamable $r2, killed renamable $r3, killed renamable $r12, 14, $noreg, $noreg, debug-location !2060; ../mulvdi3.c:0
## address: 803c9c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy SUBri killed $r11, 8, 14, $noreg, $noreg, debug-location !2061; ../mulvdi3.c:56:1
## address: 803ca0
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r4, def $r10, def $r11, def $lr, debug-location !2061; ../mulvdi3.c:56:1
## address: 803ca4
# Before:
bot
# After:
not available
## Instruction: BX_RET 14, $noreg, implicit killed $r0, implicit killed $r1, debug-location !2061; ../mulvdi3.c:56:1
## address: 803ca8
# Before:
not available
# After:
not available
### Basic Block: 16
## Instruction: CONSTPOOL_ENTRY 0, %const.0, 4
## address: 803cac
# Before:
not available
# After:
not available
## Instruction: CONSTPOOL_ENTRY 1, %const.1, 4
## address: 803cb0
# Before:
not available
# After:
not available
#### Function: __mulvsi3
### Basic Block: 0
## Instruction: $sp = frame-setup STMDB_UPD $sp(tied-def 0), 14, $noreg, killed $r11, killed $lr
## address: 803cb4
# Before:
bot
# After:
not available
## Instruction: $r11 = frame-setup MOVr killed $sp, 14, $noreg, $noreg
## address: 803cb8
# Before:
not available
# After:
not available
## Instruction: $sp = frame-setup SUBri killed $sp, 24, 14, $noreg, $noreg
## address: 803cbc
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $r11, -8, 14, $noreg :: (store (s32) into %stack.1)
## address: 803cc0
# Before:
bot
# After:
not available
## Instruction: STRi12 $r0, $r11, -4, 14, $noreg :: (store (s32) into %stack.0)
## address: 803cc4
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !2064; ../mulvsi3.c:27:9
## address: 803cc8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.5, 1, killed $cpsr, debug-location !2064; ../mulvsi3.c:27:9
## address: 803ccc
# Before:
not available
# After:
not available
## Instruction: B %bb.1, debug-location !2064; ../mulvsi3.c:27:9
## address: 803cd0
# Before:
not available
# After:
not available
### Basic Block: 1
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !2066 :: (load (s32) from %stack.1); ../mulvsi3.c:29:20
## address: 803cd4
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2066; ../mulvsi3.c:29:20
## address: 803cd8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.3, 0, killed $cpsr, debug-location !2066; ../mulvsi3.c:29:20
## address: 803cdc
# Before:
not available
# After:
not available
## Instruction: B %bb.2, debug-location !2066; ../mulvsi3.c:29:20
## address: 803ce0
# Before:
not available
# After:
not available
### Basic Block: 2
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !2068 :: (load (s32) from %stack.1); ../mulvsi3.c:29:13
## address: 803ce4
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !2068; ../mulvsi3.c:29:13
## address: 803ce8
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.4, 1, killed $cpsr, debug-location !2068; ../mulvsi3.c:29:13
## address: 803cec
# Before:
not available
# After:
not available
## Instruction: B %bb.3, debug-location !2068; ../mulvsi3.c:29:13
## address: 803cf0
# Before:
not available
# After:
not available
### Basic Block: 3
## Instruction: B %bb.21, debug-location !2069; ../mulvsi3.c:30:13
## address: 803cf4
# Before:
not available
# After:
not available
### Basic Block: 4
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2070 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
## address: 803cf8
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2070 :: (load (s32) from constant-pool); ../mulvsi3.c:31:9
## address: 803cfc
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 31, 14, $noreg, $noreg
## address: 803d00
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2070; ../mulvsi3.c:31:9
## address: 803d04
# Before:
not available
# After:
not available
### Basic Block: 5
## Instruction: $r0 = LDRi12 $r11, -8, 14, $noreg, debug-location !2072 :: (load (s32) from %stack.1); ../mulvsi3.c:33:9
## address: 803d08
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, -2147483648, 14, $noreg, implicit-def $cpsr, debug-location !2072; ../mulvsi3.c:33:9
## address: 803d0c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.10, 1, killed $cpsr, debug-location !2072; ../mulvsi3.c:33:9
## address: 803d10
# Before:
not available
# After:
not available
## Instruction: B %bb.6, debug-location !2072; ../mulvsi3.c:33:9
## address: 803d14
# Before:
not available
# After:
not available
### Basic Block: 6
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !2074 :: (load (s32) from %stack.0); ../mulvsi3.c:35:20
## address: 803d18
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 0, 14, $noreg, implicit-def $cpsr, debug-location !2074; ../mulvsi3.c:35:20
## address: 803d1c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.8, 0, killed $cpsr, debug-location !2074; ../mulvsi3.c:35:20
## address: 803d20
# Before:
not available
# After:
not available
## Instruction: B %bb.7, debug-location !2074; ../mulvsi3.c:35:20
## address: 803d24
# Before:
not available
# After:
not available
### Basic Block: 7
## Instruction: $r0 = LDRi12 $r11, -4, 14, $noreg, debug-location !2076 :: (load (s32) from %stack.0); ../mulvsi3.c:35:13
## address: 803d28
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !2076; ../mulvsi3.c:35:13
## address: 803d2c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.9, 1, killed $cpsr, debug-location !2076; ../mulvsi3.c:35:13
## address: 803d30
# Before:
not available
# After:
not available
## Instruction: B %bb.8, debug-location !2076; ../mulvsi3.c:35:13
## address: 803d34
# Before:
not available
# After:
not available
### Basic Block: 8
## Instruction: B %bb.21, debug-location !2077; ../mulvsi3.c:36:13
## address: 803d38
# Before:
not available
# After:
not available
### Basic Block: 9
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2078 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
## address: 803d3c
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2078 :: (load (s32) from constant-pool); ../mulvsi3.c:37:9
## address: 803d40
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 37, 14, $noreg, $noreg
## address: 803d44
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2078; ../mulvsi3.c:37:9
## address: 803d48
# Before:
not available
# After:
not available
### Basic Block: a
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !2079 :: (load (s32) from %stack.1); ../mulvsi3.c:39:19
## address: 803d4c
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !2079 :: (load (s32) from %stack.0); ../mulvsi3.c:39:19
## address: 803d50
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MOVsi renamable $r1, 249, 14, $noreg, $noreg, debug-location !2079; ../mulvsi3.c:39:19
## address: 803d54
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r0, $sp, 0, 14, $noreg :: (store (s32) into %stack.5)
## address: 803d58
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = EORrsi renamable $r1, renamable $r1, 249, 14, $noreg, $noreg, debug-location !2080; ../mulvsi3.c:40:23
## address: 803d5c
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = nsw SUBrsi killed renamable $r0, renamable $r1, 249, 14, $noreg, $noreg, debug-location !2081; ../mulvsi3.c:40:29
## address: 803d60
# Before:
not available
# After:
not available
## Instruction: STRi12 $r0, $sp, 4, 14, $noreg :: (store (s32) into %stack.4)
## address: 803d64
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVsi renamable $r2, 249, 14, $noreg, $noreg, debug-location !2082; ../mulvsi3.c:41:19
## address: 803d68
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 8, 14, $noreg :: (store (s32) into %stack.3)
## address: 803d6c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = EORrsi renamable $r2, renamable $r2, 249, 14, $noreg, $noreg, debug-location !2083; ../mulvsi3.c:42:23
## address: 803d70
# Before:
not available
# After:
not available
## Instruction: renamable $r1 = nsw SUBrsi killed renamable $r1, renamable $r2, 249, 14, $noreg, $noreg, debug-location !2084; ../mulvsi3.c:42:29
## address: 803d74
# Before:
not available
# After:
not available
## Instruction: STRi12 killed $r1, $sp, 12, 14, $noreg :: (store (s32) into %stack.2)
## address: 803d78
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 2, 14, $noreg, implicit-def $cpsr, debug-location !2086; ../mulvsi3.c:43:19
## address: 803d7c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.12, 11, killed $cpsr, debug-location !2086; ../mulvsi3.c:43:19
## address: 803d80
# Before:
not available
# After:
not available
## Instruction: B %bb.11, debug-location !2086; ../mulvsi3.c:43:19
## address: 803d84
# Before:
not available
# After:
not available
### Basic Block: b
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !2088 :: (load (s32) from %stack.2); ../mulvsi3.c:43:9
## address: 803d88
# Before:
bot
# After:
not available
## Instruction: CMPri renamable $r0, 1, 14, $noreg, implicit-def $cpsr, debug-location !2088; ../mulvsi3.c:43:9
## address: 803d8c
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.13, 12, killed $cpsr, debug-location !2088; ../mulvsi3.c:43:9
## address: 803d90
# Before:
not available
# After:
not available
## Instruction: B %bb.12, debug-location !2088; ../mulvsi3.c:43:9
## address: 803d94
# Before:
not available
# After:
not available
### Basic Block: c
## Instruction: B %bb.21, debug-location !2089; ../mulvsi3.c:44:9
## address: 803d98
# Before:
not available
# After:
not available
### Basic Block: d
## Instruction: $r0 = LDRi12 $sp, 0, 14, $noreg, debug-location !2091 :: (load (s32) from %stack.5); ../mulvsi3.c:45:9
## address: 803d9c
# Before:
bot
# After:
not available
## Instruction: $r1 = LDRi12 $sp, 8, 14, $noreg, debug-location !2091 :: (load (s32) from %stack.3); ../mulvsi3.c:45:9
## address: 803da0
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !2091; ../mulvsi3.c:45:9
## address: 803da4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.17, 1, killed $cpsr, debug-location !2091; ../mulvsi3.c:45:9
## address: 803da8
# Before:
not available
# After:
not available
## Instruction: B %bb.14, debug-location !2091; ../mulvsi3.c:45:9
## address: 803dac
# Before:
not available
# After:
not available
### Basic Block: e
## Instruction: $r1 = LDRi12 $sp, 12, 14, $noreg, debug-location !2092 :: (load (s32) from %stack.2); ../mulvsi3.c:47:25
## address: 803db0
# Before:
bot
# After:
not available
## Instruction: renamable $r0 = MVNi -2147483648, 14, $noreg, $noreg
## address: 803db4
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !2092; ../mulvsi3.c:47:25
## address: 803db8
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !2092; ../mulvsi3.c:47:25
## address: 803dbc
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !2094 :: (load (s32) from %stack.4); ../mulvsi3.c:47:13
## address: 803dc0
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !2094; ../mulvsi3.c:47:13
## address: 803dc4
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.16, 13, killed $cpsr, debug-location !2094; ../mulvsi3.c:47:13
## address: 803dc8
# Before:
not available
# After:
not available
## Instruction: B %bb.15, debug-location !2094; ../mulvsi3.c:47:13
## address: 803dcc
# Before:
not available
# After:
not available
### Basic Block: f
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2095 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
## address: 803dd0
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2095 :: (load (s32) from constant-pool); ../mulvsi3.c:48:13
## address: 803dd4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 48, 14, $noreg, $noreg
## address: 803dd8
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2095; ../mulvsi3.c:48:13
## address: 803ddc
# Before:
not available
# After:
not available
### Basic Block: 10
## Instruction: B %bb.20, debug-location !2096; ../mulvsi3.c:49:5
## address: 803de0
# Before:
not available
# After:
not available
### Basic Block: 11
## Instruction: $r0 = LDRi12 $sp, 12, 14, $noreg, debug-location !2097 :: (load (s32) from %stack.2); ../mulvsi3.c:52:27
## address: 803de4
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = nsw RSBri renamable $r0, 0, 14, $noreg, $noreg, debug-location !2097; ../mulvsi3.c:52:27
## address: 803de8
# Before:
not available
# After:
not available
## Instruction: renamable $r0 = MOVi -2147483648, 14, $noreg, $noreg
## address: 803dec
# Before:
not available
# After:
not available
## Instruction: BL &__divsi3, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit-def $sp, implicit-def $r0, debug-location !2098; ../mulvsi3.c:52:25
## address: 803df0
# Before:
not available
# After:
not available
## Instruction: $r1 = MOVr $r0, 14, $noreg, $noreg, debug-location !2098; ../mulvsi3.c:52:25
## address: 803df4
# Before:
not available
# After:
not available
## Instruction: $r0 = LDRi12 $sp, 4, 14, $noreg, debug-location !2100 :: (load (s32) from %stack.4); ../mulvsi3.c:52:13
## address: 803df8
# Before:
bot
# After:
not available
## Instruction: CMPrr renamable $r0, killed renamable $r1, 14, $noreg, implicit-def $cpsr, debug-location !2100; ../mulvsi3.c:52:13
## address: 803dfc
# Before:
not available
# After:
not available
## Instruction: Bcc %bb.19, 13, killed $cpsr, debug-location !2100; ../mulvsi3.c:52:13
## address: 803e00
# Before:
not available
# After:
not available
## Instruction: B %bb.18, debug-location !2100; ../mulvsi3.c:52:13
## address: 803e04
# Before:
not available
# After:
not available
### Basic Block: 12
## Instruction: renamable $r0 = LDRi12 %const.0, 0, 14, $noreg, debug-location !2101 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
## address: 803e08
# Before:
bot
# After:
not available
## Instruction: renamable $r2 = LDRi12 %const.1, 0, 14, $noreg, debug-location !2101 :: (load (s32) from constant-pool); ../mulvsi3.c:53:13
## address: 803e0c
# Before:
bot
# After:
not available
## Instruction: renamable $r1 = MOVi 53, 14, $noreg, $noreg
## address: 803e10
# Before:
not available
# After:
not available
## Instruction: BL @compilerrt_abort_impl, <regmask $lr $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $q4 $q5 $q6 $q7 $r4 $r5 $r6 $r7 $r8 $r9 $r10 $r11 $s16 $s17 $s18 $s19 $s20 $s21 $s22 $s23 $s24 $s25 $s26 $s27 and 35 more...>, implicit-def dead $lr, implicit $sp, implicit killed $r0, implicit killed $r1, implicit killed $r2, implicit-def $sp, debug-location !2101; ../mulvsi3.c:53:13
## address: 803e14
# Before:
not available
# After:
not available
### Basic Block: 13
## Instruction: B %bb.20
## address: 803e18
# Before:
not available
# After:
not available
### Basic Block: 14
## Instruction: B %bb.21, debug-location !2102; ../mulvsi3.c:55:5
## address: 803e1c
# Before:
not available
# After:
not available
### Basic Block: 15
## Instruction: $r1 = LDRi12 $r11, -4, 14, $noreg, debug-location !2103 :: (load (s32) from %stack.0); ../mulvsi3.c:0
## address: 803e20
# Before:
bot
# After:
not available
## Instruction: $r2 = LDRi12 $r11, -8, 14, $noreg, debug-location !2103 :: (load (s32) from %stack.1); ../mulvsi3.c:0
## address: 803e24
# Before:
bot
# After:
not available
## Instruction: early-clobber renamable $r0 = nsw MULv5 killed renamable $r1, killed renamable $r2, 14, $noreg, $noreg, debug-location !2103; ../mulvsi3.c:0
## address: 803e28
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy MOVr $r11, 14, $noreg, $noreg, debug-location !2104; ../mulvsi3.c:56:1
## address: 803e2c
# Before:
not available
# After:
not available
## Instruction: $sp = frame-destroy LDMIA_UPD $sp(tied-def 0), 14, $noreg, def $r11, def $lr, debug-location !2104; ../mulvsi3.c:56:1
